defaults_env: &setup_env
  run:
    name: Set $PATH
    command: |
      echo 'export GOPATH="$HOME/go"' >> $BASH_ENV
      echo 'export PATH="$PATH:$HOME/go/bin"' >> $BASH_ENV
      source $BASH_ENV

defaults_dir: &dir
  working_directory: ~/robocup-software

defaults_image: &image
  docker:
    - image: robojackets/robocup-software:master

defaults_deps: &install_deps
  run: ./util/ubuntu-setup --yes && sudo ccache -M 100M

defaults_scc: &save_compile_cache
  save_cache:
    key: ccache-{{ arch }}-{{ .Branch }}-{{ .Revision }}
    paths:
      - ~/.ccache

defaults_sctc: &save_compile_test_cache
  save_cache:
    key: ccache-test-{{ arch }}-{{ .Branch }}-{{ .Revision }}
    paths:
      - ~/.ccache

defaults_lcc: &load_compile_cache
  restore_cache:
    keys:
      - ccache-{{ arch }}-{{ .Branch }}-{{ .Revision }}
      - ccache-{{ arch }}-{{ .Branch }}
      - ccache-{{ arch }}
      - ccache-

defaults_lctc: &load_compile_test_cache
  restore_cache:
    keys:
      - ccache-test-{{ arch }}-{{ .Branch }}-{{ .Revision }}
      - ccache-test-{{ arch }}-{{ .Branch }}
      - ccache-test-{{ arch }}
      - ccache-test-

defaults_sw: &save_workspace
  persist_to_workspace:
    root: build
    paths:
      - ./*

defaults_lw: &load_workspace
  attach_workspace:
    at: build

version: 2
jobs:
  test-all:
    <<: *dir
    <<: *image
    steps:
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_cache
      - run: make
      - run: make test-soccer
      - run: make test-python

  # FIXME: pylint is broken on 18.04
  python-static:
    <<: *dir
    docker:
      - image: robojackets/robocup-software:16
    steps:
      - checkout
      - <<: *install_deps
      - run: make pylint
      - run: pip3 install -r util/requirements3.txt
      - run: make mypy

  style:
    <<: *dir
    <<: *image
    steps:
      - checkout
      # We need environment variables ($GOPATH and $PATH specifically)
      - <<: *setup_env
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_cache
      - run: pip3 install --upgrade -r util/requirements3.txt
      - run: git fetch origin && STYLIZE_DIFFBASE=origin/staging make checkstyle-lines
      - store_artifacts:
          path: /tmp/clean.patch

  gen-docs:
    <<: *dir
    <<: *image
    steps:
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_test_cache
      - run: ./autoupdate-docs.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - test-all
      - python-static
      - style

      - gen-docs:
          requires:
            - test-all
            - python-static
            - style

          filters:
            branches:
              only: master
