:py:mod:`rj_gameplay.role.passer`
=================================

.. py:module:: rj_gameplay.role.passer


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rj_gameplay.role.passer.State
   rj_gameplay.role.passer.PasserRole




Attributes
~~~~~~~~~~

.. autoapisummary::

   rj_gameplay.role.passer.FINAL_VELOCITY
   rj_gameplay.role.passer.BALL_DECELERATION


.. py:data:: FINAL_VELOCITY
   :annotation: = 4

   

.. py:data:: BALL_DECELERATION
   

   

.. py:class:: State

   Bases: :py:obj:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.

   .. py:attribute:: INIT
      

      

   .. py:attribute:: CAPTURING
      

      

   .. py:attribute:: PASS_READY
      

      

   .. py:attribute:: INIT_EXECUTE_PASS
      

      

   .. py:attribute:: EXECUTE_PASS
      

      

   .. py:attribute:: KICK_DONE
      

      


.. py:class:: PasserRole(robot: stp.rc.Robot)

   Bases: :py:obj:`stp.role.Role`

   .. py:method:: pass_ready(self)
      :property:


   .. py:method:: set_execute_pass(self, target_point)


   .. py:method:: tick(self, world_state: stp.rc.WorldState) -> rj_msgs.msg.RobotIntent

      Assume robot does not have ball on init. Then:
       - on init: get ball
       - when got ball: mark pass ready for Tactic, dribble, wait
       - on pass signal from Tactic: pivot_kick to point, let receiver get ball, done


   .. py:method:: is_done(self, world_state) -> bool



