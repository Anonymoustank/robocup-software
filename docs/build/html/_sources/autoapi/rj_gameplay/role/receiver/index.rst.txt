:py:mod:`rj_gameplay.role.receiver`
===================================

.. py:module:: rj_gameplay.role.receiver


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rj_gameplay.role.receiver.State
   rj_gameplay.role.receiver.ReceiverRole




.. py:class:: State

   Bases: :py:obj:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.

   .. py:attribute:: INIT
      

      

   .. py:attribute:: PASS_READY
      

      

   .. py:attribute:: RECEIVE_PASS
      

      

   .. py:attribute:: DONE
      

      


.. py:class:: ReceiverRole(robot: stp.rc.Robot)

   Bases: :py:obj:`stp.role.Role`

   .. py:method:: pass_ready(self)
      :property:


   .. py:method:: set_receive_pass(self)


   .. py:method:: tick(self, world_state: stp.rc.WorldState) -> rj_msgs.msg.RobotIntent

      Assume passer already has ball on init. Then:
       - on init: continue seeking
       - interrupt signal from Tactic: go get ball
       - when got ball: done


   .. py:method:: is_done(self, world_state) -> bool



