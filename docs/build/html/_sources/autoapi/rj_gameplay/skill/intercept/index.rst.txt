:py:mod:`rj_gameplay.skill.intercept`
=====================================

.. py:module:: rj_gameplay.skill.intercept


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rj_gameplay.skill.intercept.Intercept




Attributes
~~~~~~~~~~

.. autoapisummary::

   rj_gameplay.skill.intercept.SETTLE_BALL_SPEED_THRESHOLD
   rj_gameplay.skill.intercept.INTERCEPT_ANGLE_THRESHOLD


.. py:data:: SETTLE_BALL_SPEED_THRESHOLD
   :annotation: = 1.0

   

.. py:data:: INTERCEPT_ANGLE_THRESHOLD
   

   

.. py:class:: Intercept(robot: stp.rc.Robot = None)

   Bases: :py:obj:`stp.skill.Skill`

   First third of a PassReceive Skill. Gets in front of moving ball.

   .. py:method:: get_intercept_pt(self, world_state: stp.rc.WorldState, my_robot: numpy.ndarray) -> numpy.ndarray

      Gets the closest point on the linear trajectory of the ball to the intercepting robot
      Does this by projecting the ball to robot vector onto the subspace spanned by the ball's velocity vector


   .. py:method:: tick(self, world_state: stp.rc.WorldState) -> rj_msgs.msg.RobotIntent


   .. py:method:: is_done(self, world_state) -> bool

      Check if the intercepting robot has the ball, or the ball is slow and the robot is on the path of the ball.


   .. py:method:: __str__(self)


   .. py:method:: __repr__(self) -> str



