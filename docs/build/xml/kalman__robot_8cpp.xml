<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="kalman__robot_8cpp" kind="file" language="C++">
    <compoundname>kalman_robot.cpp</compoundname>
    <includes refid="kalman__robot_8hpp" local="no">rj_vision_filter/robot/kalman_robot.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includes refid="params_8hpp" local="no">rj_vision_filter/params.hpp</includes>
    <includes refid="world__robot_8hpp" local="no">rj_vision_filter/robot/world_robot.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>list</label>
      </node>
      <node id="17">
        <label>rj_param_utils/param.hpp</label>
      </node>
      <node id="15">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>rj_vision_filter/filter/kalman_filter3_d.hpp</label>
        <link refid="kalman__filter3__d_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rj_vision_filter/robot/camera_robot.hpp</label>
        <link refid="camera__robot_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rj_vision_filter/params.hpp</label>
        <link refid="params_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="3">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="4">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="9">
        <label>Eigen/Dense</label>
      </node>
      <node id="18">
        <label>rj_vision_filter/robot/world_robot.hpp</label>
        <link refid="world__robot_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/rj_vision_filter/robot/kalman_robot.cpp</label>
        <link refid="kalman__robot_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="12">
        <label>rj_msgs/msg/detection_robot.hpp</label>
      </node>
      <node id="6">
        <label>rj_common/utils.hpp</label>
      </node>
      <node id="2">
        <label>rj_vision_filter/robot/kalman_robot.hpp</label>
        <link refid="kalman__robot_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rj_vision_filter/filter/kalman_filter.hpp</label>
        <link refid="kalman__filter_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>rj_common/time.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevision__filter">vision_filter</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="kalman__robot_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/robot/kalman_robot.cpp" line="3" column="9" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/robot/kalman_robot.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/robot/kalman_robot.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/params.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/robot/world_robot.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vision_filter<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal">DEFINE_NS_FLOAT64(kVisionFilterParamModule,<sp/>kalman_robot,<sp/>max_time_outside_vision,<sp/>0.5,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>number<sp/>of<sp/>seconds<sp/>without<sp/>a<sp/>measurement<sp/>before<sp/>the<sp/>object<sp/>is<sp/>deleted&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">using<sp/>kalman_robot::PARAM_max_time_outside_vision;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">KalmanRobot::KalmanRobot(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camera_id,<sp/>RJ::Time<sp/>creation_time,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CameraRobot<sp/>init_measurement,<sp/>const<sp/>WorldRobot&amp;<sp/>previous_world_robot)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>camera_id_(camera_id),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>health_(filter::health::PARAM_init),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_update_time_(creation_time),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_predict_time_(creation_time),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unwrap_theta_ctr_(0),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>robot_id_(init_measurement.get_robot_id()),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous_measurements_(kick::detector::PARAM_slow_kick_hist_length)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Pose<sp/>init_pose<sp/>=<sp/>init_measurement.get_pose();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Twist<sp/>init_twist(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_world_robot.get_is_valid())<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_twist.linear()<sp/>=<sp/>previous_world_robot.get_vel();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_twist.angular()<sp/>=<sp/>previous_world_robot.get_omega();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_<sp/>=<sp/>KalmanFilter3D(init_pose,<sp/>init_twist);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_measurements_.push_back(init_measurement);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_theta_<sp/>=<sp/>init_twist.angular();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a415b3da4f74e80a3701a5b2618684bba" kindref="member">KalmanRobot::predict</ref>(RJ::Time<sp/>current_time)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>last_predict_time_<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>but<sp/>make<sp/>sure<sp/>you<sp/>don&apos;t<sp/>go<sp/>too<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>health_<sp/>=<sp/>std::max(health_<sp/>-<sp/>filter::health::PARAM_dec,<sp/>filter::health::PARAM_min);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter_1a1268efc628399270413977dd388916e6" kindref="member">predict</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1ae3e32f92f359f9315dd069a4649a1ec4" kindref="member">KalmanRobot::predict_and_update</ref>(RJ::Time<sp/>current_time,<sp/>CameraRobot<sp/>update_robot)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>last_predict_time_<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>last_update_time_<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>but<sp/>make<sp/>sure<sp/>you<sp/>don&apos;t<sp/>go<sp/>too<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>health_<sp/>=<sp/>std::min(health_<sp/>+<sp/>filter::health::PARAM_inc,<sp/>filter::health::PARAM_max);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>last<sp/>X<sp/>camera<sp/>observations<sp/>in<sp/>list<sp/>for<sp/>kick<sp/>detection<sp/>and<sp/>filtering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_measurements_.push_back(update_robot);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unwrap<sp/>theta<sp/>so<sp/>we<sp/>have<sp/>a<sp/>continuous<sp/>heading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cur_theta<sp/>=<sp/>update_robot.get_theta();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>it<sp/>went<sp/>below<sp/>-pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>PI/2<sp/>is<sp/>used<sp/>to<sp/>give<sp/>a<sp/>good<sp/>buffer<sp/>on<sp/>either<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_theta_<sp/>&lt;<sp/>-M_PI_2<sp/>&amp;&amp;<sp/>cur_theta<sp/>&gt;<sp/>M_PI_2)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unwrap_theta_ctr_--;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Went<sp/>above<sp/>pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_theta_<sp/>&gt;<sp/>M_PI_2<sp/>&amp;&amp;<sp/>cur_theta<sp/>&lt;<sp/>-M_PI_2)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unwrap_theta_ctr_++;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_theta_<sp/>=<sp/>cur_theta;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1a3031f3cc5d679074407c368c8b029b62" kindref="member">predict_with_update</ref>({update_robot.get_pos(),<sp/>cur_theta<sp/>+<sp/>unwrap_theta_ctr_<sp/>*<sp/>2<sp/>*<sp/>M_PI});</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a320f21ef7b5fcaaaf0b77cafeb78dfd3" kindref="member">KalmanRobot::is_unhealthy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updated_recently<sp/>=<sp/>RJ::Seconds(last_predict_time_<sp/>-<sp/>last_update_time_)<sp/>&lt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RJ::Seconds(PARAM_max_time_outside_vision);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!updated_recently;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a3041b1e658f8b935cc2a8f2f50ee910a" kindref="member">KalmanRobot::get_camera_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera_id_;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a5acb249c538d6d342494558532c1eca8" kindref="member">KalmanRobot::get_robot_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>robot_id_;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1aaa86c4a5d72203d88e7012058cd45142" kindref="member">KalmanRobot::get_health</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>health_;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">rj_geometry::Point<sp/><ref refid="classvision__filter_1_1KalmanRobot_1a3315c0dbec4755e3f9e9dd7f700a3db8" kindref="member">KalmanRobot::get_pos</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1adfd8e625908fcc3c4416f23cd61d71ed" kindref="member">get_pos</ref>();<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1ad191e83de5832699f9affbbbbddd4322" kindref="member">KalmanRobot::get_theta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1a367ce767d35bc2458df56bb55a832ad3" kindref="member">get_theta</ref>();<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">rj_geometry::Point<sp/><ref refid="classvision__filter_1_1KalmanRobot_1a8bd7e89da99afb7b01a41657ae66aa40" kindref="member">KalmanRobot::get_vel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1add1afe490ccf34edbdd17db4786cd0c2" kindref="member">get_vel</ref>();<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a0d772961f02611f5ff60ed596ef84130" kindref="member">KalmanRobot::get_omega</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1ae4b8d9ada8ac40f56e88fc0c24971840" kindref="member">get_omega</ref>();<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">rj_geometry::Point<sp/><ref refid="classvision__filter_1_1KalmanRobot_1a418fbf65c9154c3216982273535aa20f" kindref="member">KalmanRobot::get_pos_cov</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1a43a6f3a202a5bf48d97504c9a9cf14e7" kindref="member">get_pos_cov</ref>();<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a1d6c424deb0b276bb8b69199139b54d4" kindref="member">KalmanRobot::get_theta_cov</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1a33e5316bb9abb9a13b0a5a3902baf890" kindref="member">get_theta_cov</ref>();<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">rj_geometry::Point<sp/><ref refid="classvision__filter_1_1KalmanRobot_1a70d8c40fff0204c875db8642afba0bdc" kindref="member">KalmanRobot::get_vel_cov</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1a68eaf141f766b465f25a33507dea6717" kindref="member">get_vel_cov</ref>();<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1KalmanRobot_1a9bcf1225b538ecf3564d0e93bece20e3" kindref="member">KalmanRobot::get_omega_cov</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classvision__filter_1_1KalmanFilter3D_1a85097adbee9afcabfb4548bacd6f8262" kindref="member">get_omega_cov</ref>();<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::circular_buffer&lt;CameraRobot&gt;&amp;<sp/><ref refid="classvision__filter_1_1KalmanRobot_1ae26ee4140e268b55e3428674adcb3b18" kindref="member">KalmanRobot::get_prev_measurements</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>previous_measurements_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vision_filter</highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/robot/kalman_robot.cpp"/>
  </compounddef>
</doxygen>
