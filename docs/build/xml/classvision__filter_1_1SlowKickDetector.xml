<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvision__filter_1_1SlowKickDetector" kind="class" language="C++" prot="public">
    <compoundname>vision_filter::SlowKickDetector</compoundname>
    <includes refid="slow__kick__detector_8hpp" local="no">slow_kick_detector.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvision__filter_1_1SlowKickDetector_1a63eeda36e32e5405e290d4d7b9b71a87" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="classvision__filter_1_1VisionState" kindref="compound">VisionState</ref> &gt;</type>
        <definition>std::deque&lt;VisionState&gt; vision_filter::SlowKickDetector::state_history_</definition>
        <argsstring></argsstring>
        <name>state_history_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="105" column="16" bodyfile="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1a4225e35d7dc53024947b333f4275fb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::add_record</definition>
        <argsstring>(RJ::Time calc_time, const WorldBall &amp;ball, const std::vector&lt; WorldRobot &gt; &amp;yellow_robots, const std::vector&lt; WorldRobot &gt; &amp;blue_robots, KickEvent *kick_event)</argsstring>
        <name>add_record</name>
        <param>
          <type>RJ::Time</type>
          <declname>calc_time</declname>
        </param>
        <param>
          <type>const <ref refid="classvision__filter_1_1WorldBall" kindref="compound">WorldBall</ref> &amp;</type>
          <declname>ball</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>yellow_robots</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>blue_robots</declname>
        </param>
        <param>
          <type><ref refid="classvision__filter_1_1KickEvent" kindref="compound">KickEvent</ref> *</type>
          <declname>kick_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a record to our history list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>calc_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Time of calculation for this vision loop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ball</parametername>
</parameternamelist>
<parameterdescription>
<para>Best estimation of the current ball </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yellow_robots</parametername>
</parameternamelist>
<parameterdescription>
<para>Best estimation of the yellow robots </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue_robots</parametername>
</parameternamelist>
<parameterdescription>
<para>Best estimation of the blue robots </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kick_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned kick event if we find one</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether there was a kick</para>
</simplesect>
<simplesect kind="note"><para>kick_event is only filled if it returns true It will change, but will have invalid data in it </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="34" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1a5bf4d4114f3dfa5d443e5db596b2b251" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::detect_kick</definition>
        <argsstring>(KickEvent *kick_event)</argsstring>
        <name>detect_kick</name>
        <param>
          <type><ref refid="classvision__filter_1_1KickEvent" kindref="compound">KickEvent</ref> *</type>
          <declname>kick_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to find out if/which robot kicked</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kick_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned kick event if one is detected</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether a kick event was detected </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="47" column="10" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/kick/detector/slow_kick_detector.cpp" bodystart="49" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1ae21f108887ffbe527d430dfa7155d59c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::check_all_validators</definition>
        <argsstring>(const std::vector&lt; WorldRobot &gt; &amp;robot, const std::vector&lt; WorldBall &gt; &amp;ball)</argsstring>
        <name>check_all_validators</name>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>robot</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldBall" kindref="compound">WorldBall</ref> &gt; &amp;</type>
          <declname>ball</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks to see if all the different tests to detect kicks are true</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot</parametername>
</parameternamelist>
<parameterdescription>
<para>List of robots as a function of time to check against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ball</parametername>
</parameternamelist>
<parameterdescription>
<para>List of balls as a function of time to check against</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>robots and balls should be time synced </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="57" column="17" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/kick/detector/slow_kick_detector.cpp" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1af55216e2079ba17ba2ab24b8f15cb96e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::distance_validator</definition>
        <argsstring>(const std::vector&lt; WorldRobot &gt; &amp;robot, const std::vector&lt; WorldBall &gt; &amp;ball)</argsstring>
        <name>distance_validator</name>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>robot</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldBall" kindref="compound">WorldBall</ref> &gt; &amp;</type>
          <declname>ball</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If ball and robots were close and are now far away</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot</parametername>
</parameternamelist>
<parameterdescription>
<para>List of robots as a function of time to check against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ball</parametername>
</parameternamelist>
<parameterdescription>
<para>List of balls as a function of time to check against</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>robots and balls should be time synced </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="68" column="17" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/kick/detector/slow_kick_detector.cpp" bodystart="123" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1a0ff95a26c9a99a28ef5761b85c080e9d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::velocity_validator</definition>
        <argsstring>(const std::vector&lt; WorldRobot &gt; &amp;robot, const std::vector&lt; WorldBall &gt; &amp;ball)</argsstring>
        <name>velocity_validator</name>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>robot</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldBall" kindref="compound">WorldBall</ref> &gt; &amp;</type>
          <declname>ball</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make sure ball speed is above a minimum amount</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot</parametername>
</parameternamelist>
<parameterdescription>
<para>List of robots as a function of time to check against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ball</parametername>
</parameternamelist>
<parameterdescription>
<para>List of balls as a function of time to check against</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>robots and balls should be time synced </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="79" column="17" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/kick/detector/slow_kick_detector.cpp" bodystart="144" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1a896d232e71f4faa0812dd683884d362a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::distance_increasing_validator</definition>
        <argsstring>(const std::vector&lt; WorldRobot &gt; &amp;robot, const std::vector&lt; WorldBall &gt; &amp;ball)</argsstring>
        <name>distance_increasing_validator</name>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>robot</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldBall" kindref="compound">WorldBall</ref> &gt; &amp;</type>
          <declname>ball</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make sure ball is moving away from robot that kicked it</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot</parametername>
</parameternamelist>
<parameterdescription>
<para>List of robots as a function of time to check against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ball</parametername>
</parameternamelist>
<parameterdescription>
<para>List of balls as a function of time to check against</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>robots and balls should be time synced </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="90" column="17" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/kick/detector/slow_kick_detector.cpp" bodystart="160" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classvision__filter_1_1SlowKickDetector_1ab94094da57c4c2a61e463792f15a85db" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vision_filter::SlowKickDetector::in_front_validator</definition>
        <argsstring>(const std::vector&lt; WorldRobot &gt; &amp;robot, const std::vector&lt; WorldBall &gt; &amp;ball)</argsstring>
        <name>in_front_validator</name>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldRobot" kindref="compound">WorldRobot</ref> &gt; &amp;</type>
          <declname>robot</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classvision__filter_1_1WorldBall" kindref="compound">WorldBall</ref> &gt; &amp;</type>
          <declname>ball</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks that the ball is being shot from the robot mouth</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot</parametername>
</parameternamelist>
<parameterdescription>
<para>List of robots as a function of time to check against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ball</parametername>
</parameternamelist>
<parameterdescription>
<para>List of balls as a function of time to check against</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>robots and balls should be time synced </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="102" column="17" bodyfile="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/kick/detector/slow_kick_detector.cpp" bodystart="177" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Accurately detects kicks by robots using 5 or more samples in history.</para>
<para>Used in the general case when we have time to take a second and double check results before sending it back </para>
    </detaileddescription>
    <location file="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" line="18" column="23" bodyfile="/home/pnayak/robocup-software/soccer/include/rj_vision_filter/kick/detector/slow_kick_detector.hpp" bodystart="18" bodyend="106"/>
    <listofallmembers>
      <member refid="classvision__filter_1_1SlowKickDetector_1a4225e35d7dc53024947b333f4275fb48" prot="public" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>add_record</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1ae21f108887ffbe527d430dfa7155d59c" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>check_all_validators</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1a5bf4d4114f3dfa5d443e5db596b2b251" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>detect_kick</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1a896d232e71f4faa0812dd683884d362a" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>distance_increasing_validator</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1af55216e2079ba17ba2ab24b8f15cb96e" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>distance_validator</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1ab94094da57c4c2a61e463792f15a85db" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>in_front_validator</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1a63eeda36e32e5405e290d4d7b9b71a87" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>state_history_</name></member>
      <member refid="classvision__filter_1_1SlowKickDetector_1a0ff95a26c9a99a28ef5761b85c080e9d" prot="private" virt="non-virtual"><scope>vision_filter::SlowKickDetector</scope><name>velocity_validator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
