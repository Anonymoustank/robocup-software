<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rrt__util_8cpp" kind="file" language="C++">
    <compoundname>rrt_util.cpp</compoundname>
    <includes refid="rrt__util_8hpp" local="yes">rrt_util.hpp</includes>
    <includes local="no">array</includes>
    <includes local="no">rrt/planning/Path.hpp</includes>
    <includes refid="debug__drawer_8hpp" local="yes">debug_drawer.hpp</includes>
    <includes refid="path__smoothing_8hpp" local="yes">path_smoothing.hpp</includes>
    <includes refid="instant_8hpp" local="yes">planning/instant.hpp</includes>
    <includes refid="motion__constraints_8hpp" local="yes">planning/motion_constraints.hpp</includes>
    <includes refid="planning__params_8hpp" local="yes">planning/planning_params.hpp</includes>
    <includes refid="trajectory_8hpp" local="yes">planning/trajectory.hpp</includes>
    <includes refid="trajectory__utils_8hpp" local="yes">planning/trajectory_utils.hpp</includes>
    <includes refid="velocity__profiling_8hpp" local="yes">velocity_profiling.hpp</includes>
    <incdepgraph>
      <node id="12">
        <label>QMap</label>
      </node>
      <node id="21">
        <label>planning/planning_params.hpp</label>
        <link refid="planning__params_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>rj_msgs/msg/linear_motion_instant.hpp</label>
      </node>
      <node id="26">
        <label>rj_msgs/msg/trajectory.hpp</label>
      </node>
      <node id="4">
        <label>rj_protos/LogFrame.pb.h</label>
      </node>
      <node id="39">
        <label>planning/rotation_constraints.hpp</label>
        <link refid="rotation__constraints_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/primitives/rrt_util.cpp</label>
        <link refid="rrt__util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rj_param_utils/param.hpp</label>
      </node>
      <node id="10">
        <label>rj_geometry/shape_set.hpp</label>
      </node>
      <node id="5">
        <label>rj_geometry/arc.hpp</label>
      </node>
      <node id="23">
        <label>planning/trajectory.hpp</label>
        <link refid="trajectory_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rj_common/field_dimensions.hpp</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="6">
        <label>rj_geometry/composite_shape.hpp</label>
      </node>
      <node id="17">
        <label>rrt/BiRRT.hpp</label>
      </node>
      <node id="7">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="29">
        <label>rj_geometry/geometry_conversions.hpp</label>
      </node>
      <node id="25">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="27">
        <label>instant.hpp</label>
        <link refid="instant_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>planning/dynamic_obstacle.hpp</label>
        <link refid="dynamic__obstacle_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rj_geometry/polygon.hpp</label>
      </node>
      <node id="38">
        <label>velocity_profiling.hpp</label>
        <link refid="velocity__profiling_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>rrt/2dplane/PlaneStateSpace.hpp</label>
      </node>
      <node id="35">
        <label>rrt/planning/Path.hpp</label>
      </node>
      <node id="28">
        <label>optional</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="20">
        <label>planning/motion_constraints.hpp</label>
        <link refid="motion__constraints_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>array</label>
      </node>
      <node id="18">
        <label>robo_cup_state_space.hpp</label>
        <link refid="robo__cup__state__space_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>QColor</label>
      </node>
      <node id="3">
        <label>debug_drawer.hpp</label>
        <link refid="debug__drawer_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>rj_geometry/circle.hpp</label>
      </node>
      <node id="37">
        <label>planning/trajectory_utils.hpp</label>
        <link refid="trajectory__utils_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>path_smoothing.hpp</label>
        <link refid="path__smoothing_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rj_geometry/segment.hpp</label>
      </node>
      <node id="2">
        <label>rrt_util.hpp</label>
        <link refid="rrt__util_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="24">
        <label>rj_common/time.hpp</label>
      </node>
      <node id="31">
        <label>rj_msgs/msg/robot_instant.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceplanning">planning</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;rrt_util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rrt/planning/Path.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug_drawer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;path_smoothing.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/instant.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/motion_constraints.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/planning_params.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/trajectory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/trajectory_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;velocity_profiling.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">planning<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">rj_geometry;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw_rrt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RRT::Tree&lt;Point&gt;&amp;<sp/>rrt,<sp/><ref refid="classDebugDrawer" kindref="compound">DebugDrawer</ref>*<sp/>debug_drawer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>shell_id)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>each<sp/>robot&apos;s<sp/>rrts<sp/>in<sp/>a<sp/>different<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>feel<sp/>free<sp/>to<sp/>change<sp/>these,<sp/>they&apos;re<sp/>completely<sp/>arbitrary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;QColor,<sp/>6&gt;<sp/>colors<sp/>=<sp/>{QColor(</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">),<sp/><sp/>QColor(</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QColor(</highlight><highlight class="stringliteral">&quot;yellow&quot;</highlight><highlight class="normal">),<sp/>QColor(</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QColor(</highlight><highlight class="stringliteral">&quot;purple&quot;</highlight><highlight class="normal">),<sp/>QColor(</highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>QColor<sp/>color<sp/>=<sp/>colors[shell_id<sp/>%<sp/>colors.size()];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>rrt.allNodes())<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.parent()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_drawer-&gt;draw_line(Segment(node.state(),<sp/>node.parent()-&gt;state()),<sp/>color,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString(</highlight><highlight class="stringliteral">&quot;RobotRRT%1&quot;</highlight><highlight class="normal">).arg(shell_id));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw_bi_rrt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RRT::BiRRT&lt;Point&gt;&amp;<sp/>bi_rrt,<sp/><ref refid="classDebugDrawer" kindref="compound">DebugDrawer</ref>*<sp/>debug_drawer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>shell_id)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_rrt(bi_rrt.startTree(),<sp/>debug_drawer,<sp/>shell_id);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_rrt(bi_rrt.goalTree(),<sp/>debug_drawer,<sp/>shell_id);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">vector&lt;Point&gt;<sp/>run_rrt_helper(Point<sp/>start,<sp/>Point<sp/>goal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShapeSet&amp;<sp/>obstacles,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;Point&gt;&amp;<sp/>waypoints,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>straight_line)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>state_space<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;RoboCupStateSpace&gt;(FieldDimensions::current_dimensions,<sp/>obstacles);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>RRT::BiRRT&lt;Point&gt;<sp/>bi_rrt(state_space,<sp/>Point::hash,<sp/>2);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>bi_rrt.setStartState(start);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>bi_rrt.setGoalState(goal);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(straight_line)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(#1511):<sp/>Replace<sp/>this<sp/>with<sp/>a<sp/>check<sp/>that<sp/>a<sp/>straight<sp/>line<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hit<sp/>any<sp/>static<sp/>obstacles.<sp/>Set<sp/>the<sp/>step<sp/>size<sp/>to<sp/>be<sp/>the<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>the<sp/>start<sp/>and<sp/>goal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setStepSize(state_space-&gt;distance(start,<sp/>goal));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plan<sp/>straight<sp/>toward<sp/>the<sp/>goal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setGoalBias(1);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>up<sp/>to<sp/>five<sp/>times.<sp/>If<sp/>unsuccessful<sp/>after<sp/>five<sp/>tries,<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probably<sp/>doesn&apos;t<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>straight<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setMinIterations(0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setMaxIterations(5);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setStepSize(rrt::PARAM_step_size);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setMinIterations(rrt::PARAM_min_iterations);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setMaxIterations(rrt::PARAM_max_iterations);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setGoalBias(rrt::PARAM_goal_bias);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!waypoints.empty())<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setWaypoints(waypoints);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi_rrt.setWaypointBias(rrt::PARAM_waypoint_bias);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>bi_rrt.run();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Point&gt;<sp/>points<sp/>=<sp/>bi_rrt.getPath();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>RRT::SmoothPath(points,<sp/>*state_space);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(points);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">vector&lt;Point&gt;<sp/>generate_rrt(Point<sp/>start,<sp/>Point<sp/>goal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShapeSet&amp;<sp/>obstacles,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;Point&gt;&amp;<sp/>waypoints)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>we<sp/>could<sp/>just<sp/>use<sp/>state_space.transition_valid()<sp/>for<sp/>the<sp/>straight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>test,<sp/>but<sp/>this<sp/>runs<sp/>quicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Point&gt;<sp/>straight<sp/>=<sp/>run_rrt_helper(start,<sp/>goal,<sp/>obstacles,<sp/>waypoints,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!straight.empty())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(straight);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run_rrt_helper(start,<sp/>goal,<sp/>obstacles,<sp/>waypoints,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>planning</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/primitives/rrt_util.cpp"/>
  </compounddef>
</doxygen>
