<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="camera__robot_8cpp" kind="file" language="C++">
    <compoundname>camera_robot.cpp</compoundname>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes local="no">rj_common/utils.hpp</includes>
    <includes refid="camera__robot_8hpp" local="no">rj_vision_filter/robot/camera_robot.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>rj_vision_filter/robot/camera_robot.hpp</label>
        <link refid="camera__robot_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="6">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="2">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="8">
        <label>rj_msgs/msg/detection_robot.hpp</label>
      </node>
      <node id="3">
        <label>rj_common/utils.hpp</label>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/rj_vision_filter/robot/camera_robot.cpp</label>
        <link refid="camera__robot_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rj_common/time.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevision__filter">vision_filter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_common/utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/robot/camera_robot.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vision_filter<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classvision__filter_1_1CameraRobot_1a90d8f8463bc0a10d466a36f69d6c261f" kindref="member">CameraRobot::CameraRobot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RJ::Time&amp;<sp/>time_captured,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DetectionRobotMsg&amp;<sp/>msg,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_geometry::TransformMatrix&amp;<sp/>world_to_team,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>team_angle)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>time_captured_{time_captured},</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pose_{world_to_team<sp/>*<sp/>rj_geometry::Point{msg.x<sp/>/<sp/>1000,<sp/>msg.y<sp/>/<sp/>1000},</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix_angle_radians(msg.orientation<sp/>+<sp/>team_angle)},</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>robot_id_{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(msg.robot_id)}<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">RJ::Time<sp/><ref refid="classvision__filter_1_1CameraRobot_1ae09b5ecde92ea14f0abb7ede64138e16" kindref="member">CameraRobot::get_time_captured</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_captured_;<sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">rj_geometry::Point<sp/><ref refid="classvision__filter_1_1CameraRobot_1a54c7dbeadf974fd4fdae3f5223e2f14b" kindref="member">CameraRobot::get_pos</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pose_.position();<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1CameraRobot_1aa9251d239be6ecb529a41c95e797f187" kindref="member">CameraRobot::get_theta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pose_.heading();<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1CameraRobot_1a64a461d4bbbdc85d80cee35240633d8a" kindref="member">CameraRobot::get_robot_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>robot_id_;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">rj_geometry::Pose<sp/><ref refid="classvision__filter_1_1CameraRobot_1aa571affc6f74c3da533e7edb42972541" kindref="member">CameraRobot::get_pose</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pose_;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">CameraRobot<sp/><ref refid="classvision__filter_1_1CameraRobot_1aa65bc621e4e2ba76ce3842c6975a0494" kindref="member">CameraRobot::combine_robots</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;CameraRobot&gt;&amp;<sp/>robots)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>divide<sp/>by<sp/>zero<sp/>due<sp/>to<sp/>some<sp/>weird<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(robots.empty())<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPDLOG_ERROR(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>robots<sp/>to<sp/>combine<sp/>is<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1CameraRobot_1a90d8f8463bc0a10d466a36f69d6c261f" kindref="member">CameraRobot</ref>(RJ::now(),<sp/>rj_geometry::Pose(),<sp/>-1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>do<sp/>the<sp/>average<sp/>like<sp/>Ti<sp/>+<sp/>sum(Tn<sp/>-<sp/>Ti)/N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>we<sp/>aren&apos;t<sp/>trying<sp/>to<sp/>add<sp/>time_points.<sp/>It&apos;s<sp/>durations<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>init_time<sp/>=<sp/>robots.front().get_time_captured();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Seconds<sp/>time_avg<sp/>=<sp/>RJ::Seconds(0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>angles<sp/>are<sp/>done<sp/>through<sp/>conversion<sp/>to<sp/>rect<sp/>coords<sp/>then<sp/>back<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>polar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>pos_avg;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>theta_cartesian_avg;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>robot_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1CameraRobot_1a90d8f8463bc0a10d466a36f69d6c261f" kindref="member">CameraRobot</ref>&amp;<sp/>cr<sp/>:<sp/>robots)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_avg<sp/>+=<sp/>RJ::Seconds(cr.get_time_captured()<sp/>-<sp/>init_time);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_avg<sp/>+=<sp/>cr.get_pos();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_cartesian_avg<sp/>+=<sp/>rj_geometry::Point(cos(cr.get_theta()),<sp/>sin(cr.get_theta()));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_id<sp/>=<sp/>cr.get_robot_id();<sp/><sp/></highlight><highlight class="comment">//<sp/>Shouldn&apos;t<sp/>change<sp/>besides<sp/>the<sp/>first<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>time_avg<sp/>/=<sp/>robots.size();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_avg<sp/>/=<sp/>robots.size();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>theta_cartesian_avg<sp/>/=<sp/>robots.size();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvision__filter_1_1CameraRobot_1a90d8f8463bc0a10d466a36f69d6c261f" kindref="member">CameraRobot</ref>(init_time<sp/>+<sp/>time_avg,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pos_avg,<sp/>atan2(theta_cartesian_avg.y(),<sp/>theta_cartesian_avg.x())},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_id);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vision_filter</highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/src/rj_vision_filter/robot/camera_robot.cpp"/>
  </compounddef>
</doxygen>
