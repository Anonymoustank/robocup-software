<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structplanning_1_1PlanRequest" kind="struct" language="C++" prot="public">
    <compoundname>planning::PlanRequest</compoundname>
    <includes refid="plan__request_8hpp" local="no">plan_request.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a9a2fb32fcadd3a3b89967bb62d6dbabd" prot="public" static="no" mutable="no">
        <type><ref refid="structplanning_1_1RobotInstant" kindref="compound">RobotInstant</ref></type>
        <definition>RobotInstant planning::PlanRequest::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The robot&apos;s starting state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="48" column="18" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a81c195a3bc6b3016b598fd0aae743047" prot="public" static="no" mutable="no">
        <type>MotionCommand</type>
        <definition>MotionCommand planning::PlanRequest::motion_command</definition>
        <argsstring></argsstring>
        <name>motion_command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The goal to plan for. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="53" column="19" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a09a00ea54df76be592d140d5aa0d9ea5" prot="public" static="no" mutable="no">
        <type><ref refid="structplanning_1_1RobotConstraints" kindref="compound">RobotConstraints</ref></type>
        <definition>RobotConstraints planning::PlanRequest::constraints</definition>
        <argsstring></argsstring>
        <name>constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Angular and linear acceleration and velocity constraints on the robot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="58" column="22" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a90c152a8e9d1fd757d4b7fc87e363916" prot="public" static="no" mutable="no">
        <type>rj_geometry::ShapeSet</type>
        <definition>rj_geometry::ShapeSet planning::PlanRequest::field_obstacles</definition>
        <argsstring></argsstring>
        <name>field_obstacles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The list of field obstacles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="63" column="27" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a875d69d202afbe2d3cc01a4a39af6be0" prot="public" static="no" mutable="no">
        <type>rj_geometry::ShapeSet</type>
        <definition>rj_geometry::ShapeSet planning::PlanRequest::virtual_obstacles</definition>
        <argsstring></argsstring>
        <name>virtual_obstacles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The list of &quot;virtual&quot; obstacles, generated by gameplay representing soft constraints. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="69" column="27" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1ad773188c10db2bcfb57c7caee3850266" prot="public" static="no" mutable="no">
        <type>std::array&lt; const <ref refid="classplanning_1_1Trajectory" kindref="compound">Trajectory</ref> *, kNumShells &gt;</type>
        <definition>std::array&lt;const Trajectory*, kNumShells&gt; planning::PlanRequest::planned_trajectories</definition>
        <argsstring></argsstring>
        <name>planned_trajectories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Trajectories for each of the robots that has already been planned. nullptr for unplanned robots. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="75" column="16" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a1f6d9c7b7888d4e0d1279f8b0c2f9fe1" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned planning::PlanRequest::shell_id</definition>
        <argsstring></argsstring>
        <name>shell_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The robot&apos;s shell ID. Used for debug drawing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="80" column="14" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1aecaf7485e5cd0b5db5a9c26eac29bc3f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structWorldState" kindref="compound">WorldState</ref> *</type>
        <definition>const WorldState* planning::PlanRequest::world_state</definition>
        <argsstring></argsstring>
        <name>world_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The state of the world, containing robot and ball states.</para>
<para>For obstacle-avoidance purposes, obstacles should be used instead. This can be used for lookup of robots/balls by ID. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="88" column="22" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a9889a16cb257ec152fdb45bc11f7274f" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t planning::PlanRequest::priority</definition>
        <argsstring></argsstring>
        <name>priority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The priority of this plan request. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="93" column="12" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1ac95f6e8d9fed1af79e36532e53540b71" prot="public" static="no" mutable="no">
        <type><ref refid="classrj__drawing_1_1RosDebugDrawer" kindref="compound">rj_drawing::RosDebugDrawer</ref> *</type>
        <definition>rj_drawing::RosDebugDrawer* planning::PlanRequest::debug_drawer</definition>
        <argsstring></argsstring>
        <name>debug_drawer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows debug drawing in the world. If this is nullptr, no debug drawing should be performed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="99" column="32" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structplanning_1_1PlanRequest_1a4075ab8e12b4dc18f9870990d3804056" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool planning::PlanRequest::ball_sense</definition>
        <argsstring></argsstring>
        <name>ball_sense</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="102" column="10" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structplanning_1_1PlanRequest_1a316c5ad2538a40bf60156687d59b0c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>planning::PlanRequest::PlanRequest</definition>
        <argsstring>(RobotInstant start, MotionCommand command, RobotConstraints constraints, rj_geometry::ShapeSet field_obstacles, rj_geometry::ShapeSet virtual_obstacles, std::array&lt; const Trajectory *, kNumShells &gt; planned_trajectories, unsigned shell_id, const WorldState *world_state, int8_t priority=0, rj_drawing::RosDebugDrawer *debug_drawer=nullptr, bool ball_sense=false)</argsstring>
        <name>PlanRequest</name>
        <param>
          <type><ref refid="structplanning_1_1RobotInstant" kindref="compound">RobotInstant</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type>MotionCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="structplanning_1_1RobotConstraints" kindref="compound">RobotConstraints</ref></type>
          <declname>constraints</declname>
        </param>
        <param>
          <type>rj_geometry::ShapeSet</type>
          <declname>field_obstacles</declname>
        </param>
        <param>
          <type>rj_geometry::ShapeSet</type>
          <declname>virtual_obstacles</declname>
        </param>
        <param>
          <type>std::array&lt; const <ref refid="classplanning_1_1Trajectory" kindref="compound">Trajectory</ref> *, kNumShells &gt;</type>
          <declname>planned_trajectories</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>shell_id</declname>
        </param>
        <param>
          <type>const <ref refid="structWorldState" kindref="compound">WorldState</ref> *</type>
          <declname>world_state</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>priority</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classrj__drawing_1_1RosDebugDrawer" kindref="compound">rj_drawing::RosDebugDrawer</ref> *</type>
          <declname>debug_drawer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ball_sense</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="27" column="5" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="27" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulates information needed for planner to make a path. </para>
    </briefdescription>
    <detaileddescription>
<para>This struct contains ALL information necessary for a single robot path to be planned. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>Point</label>
      </node>
      <node id="2">
        <label>WorldState</label>
        <link refid="structWorldState"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ball</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BallState</label>
        <link refid="structBallState"/>
        <childnode refid="4" relation="usage">
          <edgelabel>position</edgelabel>
          <edgelabel>velocity</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>planning::RotationConstraints</label>
        <link refid="structplanning_1_1RotationConstraints"/>
      </node>
      <node id="9">
        <label>planning::RobotConstraints</label>
        <link refid="structplanning_1_1RobotConstraints"/>
        <childnode refid="10" relation="usage">
          <edgelabel>rot</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mot</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>planning::PlanRequest</label>
        <link refid="structplanning_1_1PlanRequest"/>
        <childnode refid="2" relation="usage">
          <edgelabel>world_state</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>start</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>debug_drawer</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>constraints</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>planning::MotionConstraints</label>
        <link refid="structplanning_1_1MotionConstraints"/>
      </node>
      <node id="6">
        <label>Twist</label>
      </node>
      <node id="8">
        <label>rj_drawing::RosDebugDrawer</label>
        <link refid="classrj__drawing_1_1RosDebugDrawer"/>
      </node>
      <node id="7">
        <label>Pose</label>
      </node>
      <node id="5">
        <label>planning::RobotInstant</label>
        <link refid="structplanning_1_1RobotInstant"/>
        <childnode refid="6" relation="usage">
          <edgelabel>velocity</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>pose</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" line="26" column="18" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp" bodystart="26" bodyend="103"/>
    <listofallmembers>
      <member refid="structplanning_1_1PlanRequest_1a4075ab8e12b4dc18f9870990d3804056" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>ball_sense</name></member>
      <member refid="structplanning_1_1PlanRequest_1a09a00ea54df76be592d140d5aa0d9ea5" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>constraints</name></member>
      <member refid="structplanning_1_1PlanRequest_1ac95f6e8d9fed1af79e36532e53540b71" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>debug_drawer</name></member>
      <member refid="structplanning_1_1PlanRequest_1a90c152a8e9d1fd757d4b7fc87e363916" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>field_obstacles</name></member>
      <member refid="structplanning_1_1PlanRequest_1a81c195a3bc6b3016b598fd0aae743047" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>motion_command</name></member>
      <member refid="structplanning_1_1PlanRequest_1ad773188c10db2bcfb57c7caee3850266" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>planned_trajectories</name></member>
      <member refid="structplanning_1_1PlanRequest_1a316c5ad2538a40bf60156687d59b0c12" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>PlanRequest</name></member>
      <member refid="structplanning_1_1PlanRequest_1a9889a16cb257ec152fdb45bc11f7274f" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>priority</name></member>
      <member refid="structplanning_1_1PlanRequest_1a1f6d9c7b7888d4e0d1279f8b0c2f9fe1" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>shell_id</name></member>
      <member refid="structplanning_1_1PlanRequest_1a9a2fb32fcadd3a3b89967bb62d6dbabd" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>start</name></member>
      <member refid="structplanning_1_1PlanRequest_1a875d69d202afbe2d3cc01a4a39af6be0" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>virtual_obstacles</name></member>
      <member refid="structplanning_1_1PlanRequest_1aecaf7485e5cd0b5db5a9c26eac29bc3f" prot="public" virt="non-virtual"><scope>planning::PlanRequest</scope><name>world_state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
