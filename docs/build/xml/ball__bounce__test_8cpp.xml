<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ball__bounce__test_8cpp" kind="file" language="C++">
    <compoundname>ball_bounce_test.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="ball__bounce_8hpp" local="no">rj_vision_filter/ball/ball_bounce.hpp</includes>
    <includes refid="camera__ball_8hpp" local="no">rj_vision_filter/ball/camera_ball.hpp</includes>
    <includes refid="kalman__ball_8hpp" local="no">rj_vision_filter/ball/kalman_ball.hpp</includes>
    <includes refid="world__ball_8hpp" local="no">rj_vision_filter/ball/world_ball.hpp</includes>
    <incdepgraph>
      <node id="17">
        <label>list</label>
      </node>
      <node id="3">
        <label>rj_vision_filter/ball/ball_bounce.hpp</label>
        <link refid="ball__bounce_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>rj_vision_filter/filter/kalman_filter3_d.hpp</label>
        <link refid="kalman__filter3__d_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>rj_vision_filter/robot/camera_robot.hpp</label>
        <link refid="camera__robot_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>rj_vision_filter/filter/kalman_filter_2d.hpp</label>
        <link refid="kalman__filter__2d_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/testing/rj_vision_filter/ball_bounce_test.cpp</label>
        <link refid="ball__bounce__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="16">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="8">
        <label>rj_geometry/transform_matrix.hpp</label>
      </node>
      <node id="14">
        <label>Eigen/Dense</label>
      </node>
      <node id="15">
        <label>rj_vision_filter/robot/world_robot.hpp</label>
        <link refid="world__robot_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rj_msgs/msg/detection_robot.hpp</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="7">
        <label>rj_vision_filter/ball/camera_ball.hpp</label>
        <link refid="camera__ball_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
      <node id="19">
        <label>rj_common/utils.hpp</label>
      </node>
      <node id="18">
        <label>rj_vision_filter/robot/kalman_robot.hpp</label>
        <link refid="kalman__robot_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>rj_vision_filter/ball/world_ball.hpp</label>
        <link refid="world__ball_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rj_msgs/msg/detection_ball.hpp</label>
      </node>
      <node id="5">
        <label>rj_vision_filter/ball/kalman_ball.hpp</label>
        <link refid="kalman__ball_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>rj_vision_filter/filter/kalman_filter.hpp</label>
        <link refid="kalman__filter_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rj_common/time.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevision__filter">vision_filter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/ball/ball_bounce.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/ball/camera_ball.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/ball/kalman_ball.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/ball/world_ball.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vision_filter<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal">TEST(BallBounce,<sp/>no_input)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(is_bounce);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">TEST(BallBounce,<sp/>invalid_robot)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(WorldRobot());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(is_bounce);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">TEST(BallBounce,<sp/>no_intersection)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(1,<sp/>1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(is_bounce);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">TEST(BallBounce,<sp/>wrong_direction)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(1,<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(is_bounce);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">TEST(BallBounce,<sp/>too_far)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(-1,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(is_bounce);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">TEST(BallBounce,<sp/>flat_intersect_side)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(-.1,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>3.14<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(is_bounce);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(out_vel.x(),<sp/>0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_LT(out_vel.x(),<sp/>1.01);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(out_vel.y(),<sp/>0,<sp/>0.01);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">TEST(BallBounce,<sp/>flat_intersect_mouth)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(-.1,<sp/>0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(is_bounce);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(out_vel.x(),<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_LT(out_vel.x(),<sp/>1.01);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(out_vel.y(),<sp/>0,<sp/>0.01);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">TEST(BallBounce,<sp/>angle_intersect_side)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(-0.1,<sp/>-0.06);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>3.14;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(is_bounce);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(out_vel.x(),<sp/>0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_LT(out_vel.x(),<sp/>1.0);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(out_vel.y(),<sp/>0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_LT(out_vel.y(),<sp/>1.0);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">TEST(BallBounce,<sp/>angle_intersect_mouth)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>tc<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p1<sp/>=<sp/>rj_geometry::Point(0,<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBall<sp/>cb<sp/>=<sp/>CameraBall(tc,<sp/>p1);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanBall<sp/>kb<sp/>=<sp/>KalmanBall(1,<sp/>tc,<sp/>cb,<sp/>wb);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>kb.set_vel(rj_geometry::Point(-1,<sp/>0));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>p2<sp/>=<sp/>rj_geometry::Point(-0.06,<sp/>-0.04);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>1<sp/>*<sp/>3.14<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraRobot<sp/>cr<sp/>=<sp/>CameraRobot(tc,<sp/>rj_geometry::Pose(p2,<sp/>th),<sp/>1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>KalmanRobot<sp/>kr<sp/>=<sp/>KalmanRobot(1,<sp/>tc,<sp/>cr,<sp/>wr1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanRobot&gt;<sp/>krl;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>krl.push_back(kr);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldRobot<sp/>wr2<sp/>=<sp/>WorldRobot(tc,<sp/>WorldRobot::Team::BLUE,<sp/>1,<sp/>krl);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>yellow;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>yellow.push_back(wr2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>blue;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>out_vel;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bounce<sp/>=<sp/><ref refid="classvision__filter_1_1BallBounce_1a69a1213989c850ba7616fb44186130b1" kindref="member">BallBounce::calc_ball_bounce</ref>(kb,<sp/>yellow,<sp/>blue,<sp/>out_vel);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Straight<sp/>left<sp/>with<sp/>a<sp/>45<sp/>degree<sp/>wall<sp/>causes<sp/>ball<sp/>to<sp/>go<sp/>straight<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(is_bounce);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(out_vel.x(),<sp/>0,<sp/>0.1);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(out_vel.y(),<sp/>1,<sp/>0.1);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vision_filter</highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/testing/rj_vision_filter/ball_bounce_test.cpp"/>
  </compounddef>
</doxygen>
