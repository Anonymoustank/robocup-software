<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="parallel__gradient__ascent__1d__test_8cpp" kind="file" language="C++">
    <compoundname>parallel_gradient_ascent_1d_test.cpp</compoundname>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="gradient__1d__config_8hpp" local="yes">gradient_1d_config.hpp</includes>
    <includes refid="gradient__ascent__1d_8hpp" local="yes">gradient_ascent_1d.hpp</includes>
    <includes refid="parallel__gradient__1d__config_8hpp" local="yes">parallel_gradient_1d_config.hpp</includes>
    <includes refid="parallel__gradient__ascent__1d_8hpp" local="yes">parallel_gradient_ascent_1d.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>gradient_1d_config.hpp</label>
        <link refid="gradient__1d__config_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="8">
        <label>gradient_ascent_1d.hpp</label>
        <link refid="gradient__ascent__1d_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>parallel_gradient_1d_config.hpp</label>
        <link refid="parallel__gradient__1d__config_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tuple</label>
      </node>
      <node id="10">
        <label>parallel_gradient_ascent_1d.hpp</label>
        <link refid="parallel__gradient__ascent__1d_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="4">
        <label>gtest/gtest.h</label>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/optimization/parallel_gradient_ascent_1d_test.cpp</label>
        <link refid="parallel__gradient__ascent__1d__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="parallel__gradient__ascent__1d__test_8cpp_1a53de3032967250c2c029829edd8c7c28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tuple&lt; float, float &gt;</type>
        <definition>static tuple&lt;float, float&gt; eval_function</definition>
        <argsstring>(float x)</argsstring>
        <name>eval_function</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/optimization/parallel_gradient_ascent_1d_test.cpp" line="14" column="14" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/optimization/parallel_gradient_ascent_1d_test.cpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="parallel__gradient__ascent__1d__test_8cpp_1abfb45fdbd9b08f89c5943126458abc82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(ParallelGradientAscent1D, execute)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="classParallelGradientAscent1D" kindref="compound">ParallelGradientAscent1D</ref></type>
        </param>
        <param>
          <type>execute</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/optimization/parallel_gradient_ascent_1d_test.cpp" line="17" column="1" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/optimization/parallel_gradient_ascent_1d_test.cpp" bodystart="17" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gradient_1d_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gradient_ascent_1d.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parallel_gradient_1d_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parallel_gradient_ascent_1d.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inverted<sp/>porabola</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>tuple&lt;float,<sp/>float&gt;<sp/>eval_function(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_tuple(1<sp/>-<sp/>x<sp/>*<sp/>x,<sp/>-2<sp/>*<sp/>x);<sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>general<sp/>execution<sp/>by<sp/>placing<sp/>one<sp/>on<sp/>each<sp/>side<sp/>of<sp/>the<sp/>parabola</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">TEST(<ref refid="classParallelGradientAscent1D" kindref="compound">ParallelGradientAscent1D</ref>,<sp/>execute)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParallelGradient1DConfig" kindref="compound">ParallelGradient1DConfig</ref><sp/>config;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>function&lt;tuple&lt;float,<sp/>float&gt;(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)&gt;<sp/>f<sp/>=<sp/>&amp;eval_function;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>config.ga_config.emplace_back(&amp;f,<sp/>-1,<sp/>-1.1,<sp/>0.01,<sp/>0.01,<sp/>0.5,<sp/>0.01,<sp/>100,<sp/>1,<sp/>0.001);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>config.ga_config.emplace_back(&amp;f,<sp/>1,<sp/>1.1,<sp/>0.01,<sp/>0.01,<sp/>0.5,<sp/>0.01,<sp/>100,<sp/>1,<sp/>0.001);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>config.x_combine_thresh<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParallelGradientAscent1D" kindref="compound">ParallelGradientAscent1D</ref><sp/>pga(&amp;config);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>pga.execute();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(pga.get_max_values().at(0),<sp/>1,<sp/>0.01);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(pga.get_max_x_values().at(0),<sp/>0,<sp/>0.1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(pga.get_max_values().size(),<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>they<sp/>combined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/src/soccer/optimization/parallel_gradient_ascent_1d_test.cpp"/>
  </compounddef>
</doxygen>
