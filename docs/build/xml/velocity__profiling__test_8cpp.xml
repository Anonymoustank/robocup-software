<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="velocity__profiling__test_8cpp" kind="file" language="C++">
    <compoundname>velocity_profiling_test.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="path__smoothing_8hpp" local="yes">planning/primitives/path_smoothing.hpp</includes>
    <includes refid="velocity__profiling_8hpp" local="yes">planning/primitives/velocity_profiling.hpp</includes>
    <includes refid="testing__utils_8hpp" local="yes">planning/tests/testing_utils.hpp</includes>
    <incdepgraph>
      <node id="26">
        <label>QMap</label>
      </node>
      <node id="7">
        <label>planning/planning_params.hpp</label>
        <link refid="planning__params_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rj_msgs/msg/linear_motion_instant.hpp</label>
      </node>
      <node id="33">
        <label>rj_msgs/msg/trajectory.hpp</label>
      </node>
      <node id="19">
        <label>rj_protos/LogFrame.pb.h</label>
      </node>
      <node id="10">
        <label>planning/rotation_constraints.hpp</label>
        <link refid="rotation__constraints_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rj_param_utils/param.hpp</label>
      </node>
      <node id="24">
        <label>rj_geometry/shape_set.hpp</label>
      </node>
      <node id="20">
        <label>rj_geometry/arc.hpp</label>
      </node>
      <node id="32">
        <label>planning/trajectory.hpp</label>
        <link refid="trajectory_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>string</label>
      </node>
      <node id="21">
        <label>rj_geometry/composite_shape.hpp</label>
      </node>
      <node id="2">
        <label>fstream</label>
      </node>
      <node id="5">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="14">
        <label>rj_geometry/geometry_conversions.hpp</label>
      </node>
      <node id="15">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="11">
        <label>planning/instant.hpp</label>
        <link refid="instant_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>planning/dynamic_obstacle.hpp</label>
        <link refid="dynamic__obstacle_8hpp_source"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rj_geometry/polygon.hpp</label>
      </node>
      <node id="35">
        <label>random</label>
      </node>
      <node id="9">
        <label>planning/primitives/velocity_profiling.hpp</label>
        <link refid="velocity__profiling_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
      <node id="3">
        <label>gtest/gtest.h</label>
      </node>
      <node id="6">
        <label>planning/motion_constraints.hpp</label>
        <link refid="motion__constraints_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>QColor</label>
      </node>
      <node id="18">
        <label>debug_drawer.hpp</label>
        <link refid="debug__drawer_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>rj_geometry/circle.hpp</label>
      </node>
      <node id="4">
        <label>planning/primitives/path_smoothing.hpp</label>
        <link refid="path__smoothing_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/tests/velocity_profiling_test.cpp</label>
        <link refid="velocity__profiling__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>rj_geometry/segment.hpp</label>
      </node>
      <node id="34">
        <label>planning/tests/testing_utils.hpp</label>
        <link refid="testing__utils_8hpp_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
      <node id="36">
        <label>planning/robot_constraints.hpp</label>
        <link refid="robot__constraints_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>rj_common/time.hpp</label>
      </node>
      <node id="17">
        <label>rj_msgs/msg/robot_instant.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceplanning">planning</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/primitives/path_smoothing.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/primitives/velocity_profiling.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/tests/testing_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rj_geometry::Point;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">planning<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump_trajectory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Trajectory&amp;<sp/>trajectory)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>out(filename);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cursor<sp/>=<sp/>trajectory.cursor_begin();<sp/>cursor.has_value();<sp/>cursor.advance(0.01s))<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotInstant<sp/>instant<sp/>=<sp/>cursor.value();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>RJ::Seconds(instant.stamp<sp/>-<sp/>trajectory.begin_time())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instant.position().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instant.position().y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instant.linear_velocity().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>instant.linear_velocity().y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>instant.linear_velocity().mag()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">TEST(VelocityProfiling,<sp/>BasicTest)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>RobotConstraints<sp/>constraints;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/>points{Point{0,<sp/>0},<sp/>Point{1,<sp/>1},<sp/>Point{2,<sp/>0}};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>BezierPath<sp/>path(std::move(points),<sp/>Point(1,<sp/>0),<sp/>Point(1,<sp/>0),<sp/>constraints.mot);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>start_time{0s};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Trajectory<sp/>result<sp/>=<sp/>profile_velocity(path,<sp/>0.5,<sp/>0,<sp/>constraints.mot,<sp/>start_time);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>TestingUtils::check_trajectory_continuous(result,<sp/>constraints);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">TEST(VelocityProfiling,<sp/>ComplexPath)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>RobotConstraints<sp/>constraints;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/>points{Point{0,<sp/>0},<sp/><sp/>Point{1,<sp/>1},<sp/><sp/>Point{2,<sp/>0},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point{1,<sp/>-1},<sp/>Point{0,<sp/>-2},<sp/>Point{2,<sp/>-2}};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>BezierPath<sp/>path(std::move(points),<sp/>Point(1,<sp/>0),<sp/>Point(1,<sp/>0),<sp/>constraints.mot);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>start_time{0s};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Trajectory<sp/>result<sp/>=<sp/>profile_velocity(path,<sp/>0.5,<sp/>0,<sp/>constraints.mot,<sp/>start_time);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>TestingUtils::check_trajectory_continuous(result,<sp/>constraints);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">TEST(VelocityProfiling,<sp/>ClampAccel)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(limit_acceleration(1,<sp/>20,<sp/>1.5,<sp/>1),<sp/>2,<sp/>1e-6);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(limit_acceleration(0,<sp/>5,<sp/>0.5,<sp/>1),<sp/>1,<sp/>1e-6);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(limit_acceleration(0,<sp/>0.5,<sp/>20,<sp/>1),<sp/>0.5,<sp/>1e-6);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(limit_acceleration(3,<sp/>0.5,<sp/>20,<sp/>1),<sp/>0.5,<sp/>1e-6);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(limit_acceleration(2,<sp/>0.0,<sp/>1,<sp/>3),<sp/>0.0,<sp/>1e-6);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>planning</highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/tests/velocity_profiling_test.cpp"/>
  </compounddef>
</doxygen>
