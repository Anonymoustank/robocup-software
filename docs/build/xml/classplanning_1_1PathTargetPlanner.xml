<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classplanning_1_1PathTargetPlanner" kind="class" language="C++" prot="public">
    <compoundname>planning::PathTargetPlanner</compoundname>
    <basecompoundref refid="classplanning_1_1PlannerForCommandType" prot="public" virt="non-virtual">planning::PlannerForCommandType&lt; PathTargetCommand &gt;</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classplanning_1_1PathTargetPlanner_1ac18f85dc1616f0a0e273f2428ff45b71" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double planning::PathTargetPlanner::draw_radius</definition>
        <argsstring></argsstring>
        <name>draw_radius</name>
        <initializer>= kRobotRadius</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="24" column="12" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classplanning_1_1PathTargetPlanner_1a7cbc60d0abb0c49d66fa285b24d3a107" prot="public" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor planning::PathTargetPlanner::draw_color</definition>
        <argsstring></argsstring>
        <name>draw_color</name>
        <initializer>= Qt::black</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="25" column="12" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classplanning_1_1PathTargetPlanner_1a08e20a81887c44b6ace14f990dc14028" prot="private" static="no" mutable="no">
        <type><ref refid="classplanning_1_1Trajectory" kindref="compound">Trajectory</ref></type>
        <definition>Trajectory planning::PathTargetPlanner::previous_</definition>
        <argsstring></argsstring>
        <name>previous_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="31" column="16" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a90ea89d5720f54c7f959a7b3913e2b6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>planning::PathTargetPlanner::PathTargetPlanner</definition>
        <argsstring>()</argsstring>
        <name>PathTargetPlanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="13" column="5" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a5968f7cac8a3d9229b152a3ce8535ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>planning::PathTargetPlanner::~PathTargetPlanner</definition>
        <argsstring>() override=default</argsstring>
        <name>~PathTargetPlanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="14" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a32fda64bc415fe951cdf8b09fbdb38f8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>planning::PathTargetPlanner::PathTargetPlanner</definition>
        <argsstring>(PathTargetPlanner &amp;&amp;) noexcept=default</argsstring>
        <name>PathTargetPlanner</name>
        <param>
          <type><ref refid="classplanning_1_1PathTargetPlanner" kindref="compound">PathTargetPlanner</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="16" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a1bc70570b88f6bc60125d2ff58bb8d98" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classplanning_1_1PathTargetPlanner" kindref="compound">PathTargetPlanner</ref> &amp;</type>
        <definition>PathTargetPlanner&amp; planning::PathTargetPlanner::operator=</definition>
        <argsstring>(PathTargetPlanner &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classplanning_1_1PathTargetPlanner" kindref="compound">PathTargetPlanner</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="17" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a66e1fb34985f5879a44827c1129d18b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>planning::PathTargetPlanner::PathTargetPlanner</definition>
        <argsstring>(const PathTargetPlanner &amp;)=default</argsstring>
        <name>PathTargetPlanner</name>
        <param>
          <type>const <ref refid="classplanning_1_1PathTargetPlanner" kindref="compound">PathTargetPlanner</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="18" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a6e8ffced85ca6b1584819c2cc24bf21f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classplanning_1_1PathTargetPlanner" kindref="compound">PathTargetPlanner</ref> &amp;</type>
        <definition>PathTargetPlanner&amp; planning::PathTargetPlanner::operator=</definition>
        <argsstring>(const PathTargetPlanner &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classplanning_1_1PathTargetPlanner" kindref="compound">PathTargetPlanner</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="19" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a392836905845d0a369829fe0146a96d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classplanning_1_1Trajectory" kindref="compound">Trajectory</ref></type>
        <definition>Trajectory planning::PathTargetPlanner::plan</definition>
        <argsstring>(const PlanRequest &amp;request) override</argsstring>
        <name>plan</name>
        <reimplements refid="classplanning_1_1Planner_1ad199c20bdcb712ccd1580e5ec602437b">plan</reimplements>
        <param>
          <type>const <ref refid="structplanning_1_1PlanRequest" kindref="compound">PlanRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Plan a trajectory for this request. This is guaranteed to be a request that this planner is able to handle (according to <ref refid="classplanning_1_1PlannerForCommandType_1a15adefc5f4fc9687dafe6b8014914365" kindref="member">is_applicable</ref>)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request to plan. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A trajectory for the robot to follow. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="21" column="16" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.cpp" bodystart="14" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a1d3b78e80fb46fdd2ec58bc16da387a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void planning::PathTargetPlanner::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <reimplements refid="classplanning_1_1Planner_1a3801e1037f332cfb6abda304eec7c094">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset this planner. Called after the planner is <emphasis>not</emphasis> used to handle a given command for the robot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="22" column="10" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classplanning_1_1PathTargetPlanner_1a09b9a9882e0f03a409a14e82e5f0a440" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AngleFunction</type>
        <definition>AngleFunction planning::PathTargetPlanner::get_angle_function</definition>
        <argsstring>(const PlanRequest &amp;request)</argsstring>
        <name>get_angle_function</name>
        <param>
          <type>const <ref refid="structplanning_1_1PlanRequest" kindref="compound">PlanRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="28" column="27" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.cpp" bodystart="51" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>planning::Planner</label>
        <link refid="classplanning_1_1Planner"/>
      </node>
      <node id="2">
        <label>planning::PlannerForCommandType&lt; PathTargetCommand &gt;</label>
        <link refid="classplanning_1_1PlannerForCommandType"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>planning::PathTargetPlanner</label>
        <link refid="classplanning_1_1PathTargetPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>planning::Planner</label>
        <link refid="classplanning_1_1Planner"/>
      </node>
      <node id="2">
        <label>planning::PlannerForCommandType&lt; PathTargetCommand &gt;</label>
        <link refid="classplanning_1_1PlannerForCommandType"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>planning::PathTargetPlanner</label>
        <link refid="classplanning_1_1PathTargetPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" line="11" column="54" bodyfile="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp" bodystart="11" bodyend="32"/>
    <listofallmembers>
      <member refid="classplanning_1_1PathTargetPlanner_1a7cbc60d0abb0c49d66fa285b24d3a107" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>draw_color</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1ac18f85dc1616f0a0e273f2428ff45b71" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>draw_radius</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a09b9a9882e0f03a409a14e82e5f0a440" prot="private" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>get_angle_function</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1a15adefc5f4fc9687dafe6b8014914365" prot="public" virt="virtual"><scope>planning::PathTargetPlanner</scope><name>is_applicable</name></member>
      <member refid="classplanning_1_1Planner_1a1de466640407759489cc9f74ac1e3aba" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>name</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a1bc70570b88f6bc60125d2ff58bb8d98" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>operator=</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a6e8ffced85ca6b1584819c2cc24bf21f" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>operator=</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1a955be0ec4e67379ce9b5949fe1d2efe4" prot="public" virt="non-virtual" ambiguityscope="PlannerForCommandType&lt; PathTargetCommand &gt;::"><scope>planning::PathTargetPlanner</scope><name>operator=</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1aa0a3846baecac12398ddd7a9f0d52e18" prot="public" virt="non-virtual" ambiguityscope="PlannerForCommandType&lt; PathTargetCommand &gt;::"><scope>planning::PathTargetPlanner</scope><name>operator=</name></member>
      <member refid="classplanning_1_1Planner_1a5d25e229f428de27c7ab72fc2e5a1a5e" prot="public" virt="non-virtual" ambiguityscope="planning::Planner::"><scope>planning::PathTargetPlanner</scope><name>operator=</name></member>
      <member refid="classplanning_1_1Planner_1ad0a51fdbb90de2f370b9dbf08f9850c2" prot="public" virt="non-virtual" ambiguityscope="planning::Planner::"><scope>planning::PathTargetPlanner</scope><name>operator=</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a90ea89d5720f54c7f959a7b3913e2b6c" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>PathTargetPlanner</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a32fda64bc415fe951cdf8b09fbdb38f8" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>PathTargetPlanner</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a66e1fb34985f5879a44827c1129d18b5" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>PathTargetPlanner</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a392836905845d0a369829fe0146a96d8" prot="public" virt="virtual"><scope>planning::PathTargetPlanner</scope><name>plan</name></member>
      <member refid="classplanning_1_1Planner_1ade63e8fe5919753dddcdfce60289a4db" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>Planner</name></member>
      <member refid="classplanning_1_1Planner_1a32a25b3aa79b38f3a40a3835444bb655" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>Planner</name></member>
      <member refid="classplanning_1_1Planner_1a896421dcf5ec7cde31bfa1e66786dfe7" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>Planner</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1a4acd90731e313c29f531ae7e6c7a5522" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>PlannerForCommandType</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1a0052d11e437b1bcd71b4dff931da307c" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>PlannerForCommandType</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1a2b572cc2412b56620ab3bc9d4cd12e70" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>PlannerForCommandType</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a08e20a81887c44b6ace14f990dc14028" prot="private" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>previous_</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a1d3b78e80fb46fdd2ec58bc16da387a0" prot="public" virt="virtual"><scope>planning::PathTargetPlanner</scope><name>reset</name></member>
      <member refid="classplanning_1_1PathTargetPlanner_1a5968f7cac8a3d9229b152a3ce8535ef3" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>~PathTargetPlanner</name></member>
      <member refid="classplanning_1_1Planner_1aa3f85157362f54234fe961add1a0c2ee" prot="public" virt="virtual"><scope>planning::PathTargetPlanner</scope><name>~Planner</name></member>
      <member refid="classplanning_1_1PlannerForCommandType_1ac5c9a5077f11bb5d39eb9fff5d63c055" prot="public" virt="non-virtual"><scope>planning::PathTargetPlanner</scope><name>~PlannerForCommandType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
