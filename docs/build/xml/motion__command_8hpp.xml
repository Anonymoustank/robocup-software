<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="motion__command_8hpp" kind="file" language="C++">
    <compoundname>motion_command.hpp</compoundname>
    <includes local="no">variant</includes>
    <includes local="no">vector</includes>
    <includes local="no">rj_convert/ros_convert.hpp</includes>
    <includes local="no">rj_geometry/point.hpp</includes>
    <includes local="no">rj_geometry/pose.hpp</includes>
    <includes local="no">rj_msgs/msg/collect_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/empty_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/intercept_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/line_kick_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/linear_motion_instant.hpp</includes>
    <includes local="no">rj_msgs/msg/motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/path_target_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/pivot_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/settle_motion_command.hpp</includes>
    <includes local="no">rj_msgs/msg/world_vel_motion_command.hpp</includes>
    <includes refid="world__state_8hpp" local="no">world_state.hpp</includes>
    <includes refid="instant_8hpp" local="yes">planning/instant.hpp</includes>
    <includes refid="trajectory_8hpp" local="yes">planning/trajectory.hpp</includes>
    <includedby refid="robot__intent_8hpp" local="yes">/home/pnayak/robocup-software/soccer/src/soccer/robot_intent.hpp</includedby>
    <includedby refid="planner_8hpp" local="yes">/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/planner.hpp</includedby>
    <includedby refid="plan__request_8hpp" local="no">/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp</includedby>
    <includedby refid="conversion__tests_8cpp" local="yes">/home/pnayak/robocup-software/soccer/src/soccer/planning/tests/conversion_tests.cpp</includedby>
    <includedby refid="planner__test_8cpp" local="yes">/home/pnayak/robocup-software/soccer/src/soccer/planning/tests/planner_test.cpp</includedby>
    <incdepgraph>
      <node id="40">
        <label>QMap</label>
      </node>
      <node id="16">
        <label>rj_msgs/msg/world_vel_motion_command.hpp</label>
      </node>
      <node id="20">
        <label>rj_constants/constants.hpp</label>
      </node>
      <node id="10">
        <label>rj_msgs/msg/line_kick_motion_command.hpp</label>
      </node>
      <node id="11">
        <label>rj_msgs/msg/linear_motion_instant.hpp</label>
      </node>
      <node id="25">
        <label>fmt/format.h</label>
      </node>
      <node id="7">
        <label>rj_msgs/msg/collect_motion_command.hpp</label>
      </node>
      <node id="46">
        <label>rj_msgs/msg/trajectory.hpp</label>
      </node>
      <node id="23">
        <label>rj_msgs/msg/world_state.hpp</label>
      </node>
      <node id="33">
        <label>rj_protos/LogFrame.pb.h</label>
      </node>
      <node id="2">
        <label>variant</label>
      </node>
      <node id="21">
        <label>rj_msgs/msg/ball_state.hpp</label>
      </node>
      <node id="27">
        <label>rj_param_utils/param.hpp</label>
      </node>
      <node id="38">
        <label>rj_geometry/shape_set.hpp</label>
      </node>
      <node id="34">
        <label>rj_geometry/arc.hpp</label>
      </node>
      <node id="17">
        <label>world_state.hpp</label>
        <link refid="world__state_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>planning/trajectory.hpp</label>
        <link refid="trajectory_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>string</label>
      </node>
      <node id="35">
        <label>rj_geometry/composite_shape.hpp</label>
      </node>
      <node id="26">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="8">
        <label>rj_msgs/msg/empty_motion_command.hpp</label>
      </node>
      <node id="4">
        <label>rj_convert/ros_convert.hpp</label>
      </node>
      <node id="5">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="18">
        <label>rj_geometry/geometry_conversions.hpp</label>
      </node>
      <node id="6">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="29">
        <label>planning/instant.hpp</label>
        <link refid="instant_8hpp_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/motion_command.hpp</label>
        <link refid="motion__command_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rj_msgs/msg/intercept_motion_command.hpp</label>
      </node>
      <node id="15">
        <label>rj_msgs/msg/settle_motion_command.hpp</label>
      </node>
      <node id="43">
        <label>planning/dynamic_obstacle.hpp</label>
        <link refid="dynamic__obstacle_8hpp_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>rj_geometry/polygon.hpp</label>
      </node>
      <node id="24">
        <label>global_params.hpp</label>
        <link refid="global__params_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>optional</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="14">
        <label>rj_msgs/msg/pivot_motion_command.hpp</label>
      </node>
      <node id="39">
        <label>QColor</label>
      </node>
      <node id="32">
        <label>debug_drawer.hpp</label>
        <link refid="debug__drawer_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>rj_param_utils/ros2_global_param_provider.hpp</label>
      </node>
      <node id="12">
        <label>rj_msgs/msg/motion_command.hpp</label>
      </node>
      <node id="44">
        <label>rj_geometry/circle.hpp</label>
      </node>
      <node id="13">
        <label>rj_msgs/msg/path_target_motion_command.hpp</label>
      </node>
      <node id="37">
        <label>rj_geometry/segment.hpp</label>
      </node>
      <node id="22">
        <label>rj_msgs/msg/robot_state.hpp</label>
      </node>
      <node id="41">
        <label>memory</label>
      </node>
      <node id="19">
        <label>rj_common/time.hpp</label>
      </node>
      <node id="31">
        <label>rj_msgs/msg/robot_instant.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/collect_planner.hpp</label>
        <link refid="collect__planner_8hpp_source"/>
      </node>
      <node id="9">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/planner.hpp</label>
        <link refid="planner_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/radio/network_radio.hpp</label>
        <link refid="network__radio_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/context.hpp</label>
        <link refid="context_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ros2_temp/debug_draw_interface.hpp</label>
        <link refid="debug__draw__interface_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/processor.hpp</label>
        <link refid="processor_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/intercept_planner.hpp</label>
        <link refid="intercept__planner_8hpp_source"/>
      </node>
      <node id="14">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/line_kick_planner.hpp</label>
        <link refid="line__kick__planner_8hpp_source"/>
      </node>
      <node id="11">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/path_target_planner.hpp</label>
        <link refid="path__target__planner_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ros2_temp/referee_sub.hpp</label>
        <link refid="referee__sub_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ros2_temp/raw_vision_packet_sub.hpp</label>
        <link refid="raw__vision__packet__sub_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/radio/packet_convert.hpp</label>
        <link refid="packet__convert_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/motion_command.hpp</label>
        <link refid="motion__command_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/plan_request.hpp</label>
        <link refid="plan__request_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/control/motion_control_node.hpp</label>
        <link refid="motion__control__node_8hpp_source"/>
      </node>
      <node id="29">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ros2_temp/autonomy_interface.hpp</label>
        <link refid="autonomy__interface_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner_node.hpp</label>
        <link refid="planner__node_8hpp_source"/>
      </node>
      <node id="20">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/radio/sim_radio.hpp</label>
        <link refid="sim__radio_8hpp_source"/>
      </node>
      <node id="12">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/escape_obstacles_path_planner.hpp</label>
        <link refid="escape__obstacles__path__planner_8hpp_source"/>
      </node>
      <node id="19">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ui/main_window.hpp</label>
        <link refid="main__window_8hpp_source"/>
      </node>
      <node id="7">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/joystick/manual_control_node.hpp</label>
        <link refid="manual__control__node_8hpp_source"/>
      </node>
      <node id="28">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/radio/radio.hpp</label>
        <link refid="radio_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/settle_planner.hpp</label>
        <link refid="settle__planner_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/control/motion_control.hpp</label>
        <link refid="motion__control_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/pivot_path_planner.hpp</label>
        <link refid="pivot__path__planner_8hpp_source"/>
      </node>
      <node id="25">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ui/sim_field_view.hpp</label>
        <link refid="sim__field__view_8hpp_source"/>
      </node>
      <node id="24">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/ros2_temp/soccer_config_client.hpp</label>
        <link refid="soccer__config__client_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/robot_intent.hpp</label>
        <link refid="robot__intent_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/pnayak/robocup-software/soccer/src/soccer/logger.hpp</label>
        <link refid="logger_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structplanning_1_1SettleCommand" prot="public">planning::SettleCommand</innerclass>
    <innerclass refid="structplanning_1_1CollectCommand" prot="public">planning::CollectCommand</innerclass>
    <innerclass refid="structplanning_1_1LineKickCommand" prot="public">planning::LineKickCommand</innerclass>
    <innerclass refid="structplanning_1_1EmptyCommand" prot="public">planning::EmptyCommand</innerclass>
    <innerclass refid="structplanning_1_1TargetFaceTangent" prot="public">planning::TargetFaceTangent</innerclass>
    <innerclass refid="structplanning_1_1TargetFaceAngle" prot="public">planning::TargetFaceAngle</innerclass>
    <innerclass refid="structplanning_1_1TargetFacePoint" prot="public">planning::TargetFacePoint</innerclass>
    <innerclass refid="structplanning_1_1PathTargetCommand" prot="public">planning::PathTargetCommand</innerclass>
    <innerclass refid="structplanning_1_1WorldVelCommand" prot="public">planning::WorldVelCommand</innerclass>
    <innerclass refid="structplanning_1_1PivotCommand" prot="public">planning::PivotCommand</innerclass>
    <innerclass refid="structplanning_1_1InterceptCommand" prot="public">planning::InterceptCommand</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1EmptyCommand_00_01rj__msgs_1_1msg_1_1EmptyMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::EmptyCommand, rj_msgs::msg::EmptyMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1PathTargetCommand_00_01rj__msgs_1_1msg_1_1PathTargetMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::PathTargetCommand, rj_msgs::msg::PathTargetMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1WorldVelCommand_00_01rj__msgs_1_1msg_1_1WorldVelMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::WorldVelCommand, rj_msgs::msg::WorldVelMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1PivotCommand_00_01rj__msgs_1_1msg_1_1PivotMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::PivotCommand, rj_msgs::msg::PivotMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1SettleCommand_00_01rj__msgs_1_1msg_1_1SettleMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::SettleCommand, rj_msgs::msg::SettleMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1CollectCommand_00_01rj__msgs_1_1msg_1_1CollectMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::CollectCommand, rj_msgs::msg::CollectMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1LineKickCommand_00_01rj__msgs_1_1msg_1_1LineKickMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::LineKickCommand, rj_msgs::msg::LineKickMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1InterceptCommand_00_01rj__msgs_1_1msg_1_1InterceptMotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::InterceptCommand, rj_msgs::msg::InterceptMotionCommand &gt;</innerclass>
    <innerclass refid="structrj__convert_1_1RosConverter_3_01planning_1_1MotionCommand_00_01rj__msgs_1_1msg_1_1MotionCommand_01_4" prot="public">rj_convert::RosConverter&lt; planning::MotionCommand, rj_msgs::msg::MotionCommand &gt;</innerclass>
    <innernamespace refid="namespaceplanning">planning</innernamespace>
    <innernamespace refid="namespacerj__convert">rj_convert</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_convert/ros_convert.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_geometry/point.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_geometry/pose.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/collect_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/empty_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/intercept_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/line_kick_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/linear_motion_instant.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/path_target_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/pivot_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/settle_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_msgs/msg/world_vel_motion_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;world_state.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/instant.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;planning/trajectory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">planning<sp/>{</highlight></codeline>
<codeline lineno="25" refid="structplanning_1_1SettleCommand" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1SettleCommand" kindref="compound">SettleCommand</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;rj_geometry::Point&gt;<sp/>target;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28" refid="structplanning_1_1CollectCommand" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1CollectCommand" kindref="compound">CollectCommand</ref><sp/>{};</highlight></codeline>
<codeline lineno="29" refid="structplanning_1_1LineKickCommand" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1LineKickCommand" kindref="compound">LineKickCommand</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>target;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structplanning_1_1EmptyCommand" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1EmptyCommand" kindref="compound">EmptyCommand</ref><sp/>{};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structplanning_1_1TargetFaceTangent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1TargetFaceTangent" kindref="compound">TargetFaceTangent</ref><sp/>{};</highlight></codeline>
<codeline lineno="39" refid="structplanning_1_1TargetFaceAngle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1TargetFaceAngle" kindref="compound">TargetFaceAngle</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42" refid="structplanning_1_1TargetFacePoint" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1TargetFacePoint" kindref="compound">TargetFacePoint</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>face_point;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>AngleOverride<sp/>=</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;TargetFaceTangent,<sp/>TargetFaceAngle,<sp/>TargetFacePoint&gt;;</highlight></codeline>
<codeline lineno="51" refid="structplanning_1_1PathTargetCommand" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1PathTargetCommand" kindref="compound">PathTargetCommand</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanning_1_1LinearMotionInstant" kindref="compound">LinearMotionInstant</ref><sp/>goal;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>AngleOverride<sp/>angle_override<sp/>=<sp/><ref refid="structplanning_1_1TargetFaceTangent" kindref="compound">TargetFaceTangent</ref>{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_ball<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structplanning_1_1WorldVelCommand" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1WorldVelCommand" kindref="compound">WorldVelCommand</ref><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>world_vel;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structplanning_1_1PivotCommand" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1PivotCommand" kindref="compound">PivotCommand</ref><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>pivot_point;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>pivot_target;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structplanning_1_1InterceptCommand" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structplanning_1_1InterceptCommand" kindref="compound">InterceptCommand</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>rj_geometry::Point<sp/>target;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MotionCommand<sp/>=</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;<ref refid="structplanning_1_1EmptyCommand" kindref="compound">EmptyCommand</ref>,<sp/><ref refid="structplanning_1_1PathTargetCommand" kindref="compound">PathTargetCommand</ref>,<sp/><ref refid="structplanning_1_1WorldVelCommand" kindref="compound">WorldVelCommand</ref>,<sp/><ref refid="structplanning_1_1PivotCommand" kindref="compound">PivotCommand</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplanning_1_1SettleCommand" kindref="compound">SettleCommand</ref>,<sp/><ref refid="structplanning_1_1CollectCommand" kindref="compound">CollectCommand</ref>,<sp/><ref refid="structplanning_1_1LineKickCommand" kindref="compound">LineKickCommand</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplanning_1_1InterceptCommand" kindref="compound">InterceptCommand</ref>&gt;;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>planning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rj_convert<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="94" refid="structrj__convert_1_1RosConverter_3_01planning_1_1EmptyCommand_00_01rj__msgs_1_1msg_1_1EmptyMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::EmptyCommand,<sp/>rj_msgs::msg::EmptyMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::EmptyMotionCommand<sp/>to_ros([</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1EmptyCommand" kindref="compound">planning::EmptyCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rj_msgs::msg::EmptyMotionCommand{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1EmptyCommand" kindref="compound">planning::EmptyCommand</ref><sp/>from_ros([</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::EmptyMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1EmptyCommand" kindref="compound">planning::EmptyCommand</ref>{};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1EmptyCommand" kindref="compound">planning::EmptyCommand</ref>,<sp/>rj_msgs::msg::EmptyMotionCommand);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="109" refid="structrj__convert_1_1RosConverter_3_01planning_1_1PathTargetCommand_00_01rj__msgs_1_1msg_1_1PathTargetMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::PathTargetCommand,<sp/>rj_msgs::msg::PathTargetMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::PathTargetMotionCommand<sp/>to_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1PathTargetCommand" kindref="compound">planning::PathTargetCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rj_msgs::msg::PathTargetMotionCommand<sp/>result;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.target<sp/>=<sp/>convert_to_ros(from.goal);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>maybe_point<sp/>=<sp/>std::get_if&lt;planning::TargetFacePoint&gt;(&amp;from.angle_override);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>maybe_angle<sp/>=<sp/>std::get_if&lt;planning::TargetFaceAngle&gt;(&amp;from.angle_override);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maybe_point<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rj_geometry_msgs::msg::Point<sp/>face_point<sp/>=<sp/>convert_to_ros(maybe_point-&gt;face_point);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.override_face_point.push_back(face_point);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maybe_angle<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>face_angle<sp/>=<sp/>maybe_angle-&gt;target;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.override_angle.push_back(face_angle);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ignore_ball<sp/>=<sp/>from.ignore_ball;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1PathTargetCommand" kindref="compound">planning::PathTargetCommand</ref><sp/>from_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::PathTargetMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplanning_1_1PathTargetCommand" kindref="compound">planning::PathTargetCommand</ref><sp/>result;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.goal<sp/>=<sp/>convert_from_ros(from.target);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.override_angle.empty())<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.angle_override<sp/>=<sp/><ref refid="structplanning_1_1TargetFaceAngle" kindref="compound">planning::TargetFaceAngle</ref>{from.override_angle.front()};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.override_face_point.empty())<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.angle_override<sp/>=</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplanning_1_1TargetFacePoint" kindref="compound">planning::TargetFacePoint</ref>{convert_from_ros(from.override_face_point.front())};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.angle_override<sp/>=<sp/><ref refid="structplanning_1_1TargetFaceTangent" kindref="compound">planning::TargetFaceTangent</ref>{};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ignore_ball<sp/>=<sp/>from.ignore_ball;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1PathTargetCommand" kindref="compound">planning::PathTargetCommand</ref>,<sp/>rj_msgs::msg::PathTargetMotionCommand);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="148" refid="structrj__convert_1_1RosConverter_3_01planning_1_1WorldVelCommand_00_01rj__msgs_1_1msg_1_1WorldVelMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::WorldVelCommand,<sp/>rj_msgs::msg::WorldVelMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::WorldVelMotionCommand<sp/>to_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1WorldVelCommand" kindref="compound">planning::WorldVelCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rj_msgs::build&lt;rj_msgs::msg::WorldVelMotionCommand&gt;().world_vel(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert_to_ros(from.world_vel));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1WorldVelCommand" kindref="compound">planning::WorldVelCommand</ref><sp/>from_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::WorldVelMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1WorldVelCommand" kindref="compound">planning::WorldVelCommand</ref>{convert_from_ros(from.world_vel)};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1WorldVelCommand" kindref="compound">planning::WorldVelCommand</ref>,<sp/>rj_msgs::msg::WorldVelMotionCommand);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="162" refid="structrj__convert_1_1RosConverter_3_01planning_1_1PivotCommand_00_01rj__msgs_1_1msg_1_1PivotMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::PivotCommand,<sp/>rj_msgs::msg::PivotMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::PivotMotionCommand<sp/>to_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1PivotCommand" kindref="compound">planning::PivotCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rj_msgs::build&lt;rj_msgs::msg::PivotMotionCommand&gt;()</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pivot_point(convert_to_ros(from.pivot_point))</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pivot_target(convert_to_ros(from.pivot_target));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1PivotCommand" kindref="compound">planning::PivotCommand</ref><sp/>from_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::PivotMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1PivotCommand" kindref="compound">planning::PivotCommand</ref>{convert_from_ros(from.pivot_point),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert_from_ros(from.pivot_target)};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1PivotCommand" kindref="compound">planning::PivotCommand</ref>,<sp/>rj_msgs::msg::PivotMotionCommand);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="178" refid="structrj__convert_1_1RosConverter_3_01planning_1_1SettleCommand_00_01rj__msgs_1_1msg_1_1SettleMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::SettleCommand,<sp/>rj_msgs::msg::SettleMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::SettleMotionCommand<sp/>to_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1SettleCommand" kindref="compound">planning::SettleCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rj_msgs::msg::SettleMotionCommand<sp/>result;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from.target.has_value())<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.maybe_target.push_back(convert_to_ros(from.target.value()));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1SettleCommand" kindref="compound">planning::SettleCommand</ref><sp/>from_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::SettleMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplanning_1_1SettleCommand" kindref="compound">planning::SettleCommand</ref><sp/>result;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.maybe_target.empty())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.target<sp/>=<sp/>convert_from_ros(from.maybe_target.front());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1SettleCommand" kindref="compound">planning::SettleCommand</ref>,<sp/>rj_msgs::msg::SettleMotionCommand);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="199" refid="structrj__convert_1_1RosConverter_3_01planning_1_1CollectCommand_00_01rj__msgs_1_1msg_1_1CollectMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::CollectCommand,<sp/>rj_msgs::msg::CollectMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::CollectMotionCommand<sp/>to_ros([</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1CollectCommand" kindref="compound">planning::CollectCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rj_msgs::build&lt;rj_msgs::msg::CollectMotionCommand&gt;();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1CollectCommand" kindref="compound">planning::CollectCommand</ref><sp/>from_ros([</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::CollectMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1CollectCommand" kindref="compound">planning::CollectCommand</ref>{};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1CollectCommand" kindref="compound">planning::CollectCommand</ref>,<sp/>rj_msgs::msg::CollectMotionCommand);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="214" refid="structrj__convert_1_1RosConverter_3_01planning_1_1LineKickCommand_00_01rj__msgs_1_1msg_1_1LineKickMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::LineKickCommand,<sp/>rj_msgs::msg::LineKickMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::LineKickMotionCommand<sp/>to_ros([</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1LineKickCommand" kindref="compound">planning::LineKickCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rj_msgs::build&lt;rj_msgs::msg::LineKickMotionCommand&gt;().target(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert_to_ros(from.target));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1LineKickCommand" kindref="compound">planning::LineKickCommand</ref><sp/>from_ros([</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::LineKickMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1LineKickCommand" kindref="compound">planning::LineKickCommand</ref>{convert_from_ros(from.target)};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1LineKickCommand" kindref="compound">planning::LineKickCommand</ref>,<sp/>rj_msgs::msg::LineKickMotionCommand);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="230" refid="structrj__convert_1_1RosConverter_3_01planning_1_1InterceptCommand_00_01rj__msgs_1_1msg_1_1InterceptMotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::InterceptCommand,<sp/>rj_msgs::msg::InterceptMotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::InterceptMotionCommand<sp/>to_ros([</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1InterceptCommand" kindref="compound">planning::InterceptCommand</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rj_msgs::build&lt;rj_msgs::msg::InterceptMotionCommand&gt;().target(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert_to_ros(from.target));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1InterceptCommand" kindref="compound">planning::InterceptCommand</ref><sp/>from_ros([</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::InterceptMotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structplanning_1_1InterceptCommand" kindref="compound">planning::InterceptCommand</ref>{convert_from_ros(from.target)};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">ASSOCIATE_CPP_ROS(<ref refid="structplanning_1_1InterceptCommand" kindref="compound">planning::InterceptCommand</ref>,<sp/>rj_msgs::msg::InterceptMotionCommand);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="246" refid="structrj__convert_1_1RosConverter_3_01planning_1_1MotionCommand_00_01rj__msgs_1_1msg_1_1MotionCommand_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RosConverter&lt;planning::MotionCommand,<sp/>rj_msgs::msg::MotionCommand&gt;<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>rj_msgs::msg::MotionCommand<sp/>to_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>planning::MotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rj_msgs::msg::MotionCommand<sp/>result;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>empty<sp/>=<sp/>std::get_if&lt;planning::EmptyCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.empty_command.emplace_back(convert_to_ros(*empty));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>path_target<sp/>=<sp/>std::get_if&lt;planning::PathTargetCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.path_target_command.emplace_back(convert_to_ros(*path_target));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>world_vel<sp/>=<sp/>std::get_if&lt;planning::WorldVelCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.world_vel_command.emplace_back(convert_to_ros(*world_vel));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>pivot<sp/>=<sp/>std::get_if&lt;planning::PivotCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.pivot_command.emplace_back(convert_to_ros(*pivot));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>settle<sp/>=<sp/>std::get_if&lt;planning::SettleCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.settle_command.emplace_back(convert_to_ros(*settle));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>collect<sp/>=<sp/>std::get_if&lt;planning::CollectCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.collect_command.emplace_back(convert_to_ros(*collect));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>line_kick<sp/>=<sp/>std::get_if&lt;planning::LineKickCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.line_kick_command.emplace_back(convert_to_ros(*line_kick));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>intercept<sp/>=<sp/>std::get_if&lt;planning::InterceptCommand&gt;(&amp;from))<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.intercept_command.emplace_back(convert_to_ros(*intercept));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>variant<sp/>of<sp/>MotionCommand&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>planning::MotionCommand<sp/>from_ros(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rj_msgs::msg::MotionCommand&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planning::MotionCommand<sp/>result;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.empty_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.empty_command.front());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.path_target_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.path_target_command.front());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.world_vel_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.world_vel_command.front());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.pivot_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.pivot_command.front());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.settle_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.settle_command.front());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.collect_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.collect_command.front());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.line_kick_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.line_kick_command.front());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.intercept_command.empty())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_from_ros(from.intercept_command.front());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>variant<sp/>of<sp/>MotionCommand&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">ASSOCIATE_CPP_ROS(planning::MotionCommand,<sp/>rj_msgs::msg::MotionCommand);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rj_convert</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/src/soccer/planning/planner/motion_command.hpp"/>
  </compounddef>
</doxygen>
