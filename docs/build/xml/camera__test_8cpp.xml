<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="camera__test_8cpp" kind="file" language="C++">
    <compoundname>camera_test.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">rj_constants/constants.hpp</includes>
    <includes refid="camera_8hpp" local="no">rj_vision_filter/camera/camera.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>list</label>
      </node>
      <node id="3">
        <label>rj_constants/constants.hpp</label>
      </node>
      <node id="6">
        <label>rj_vision_filter/ball/ball_bounce.hpp</label>
        <link refid="ball__bounce_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rj_vision_filter/filter/kalman_filter3_d.hpp</label>
        <link refid="kalman__filter3__d_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>rj_vision_filter/robot/camera_robot.hpp</label>
        <link refid="camera__robot_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>rj_vision_filter/filter/kalman_filter_2d.hpp</label>
        <link refid="kalman__filter__2d_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="7">
        <label>rj_geometry/point.hpp</label>
      </node>
      <node id="19">
        <label>rj_geometry/pose.hpp</label>
      </node>
      <node id="11">
        <label>rj_geometry/transform_matrix.hpp</label>
      </node>
      <node id="17">
        <label>Eigen/Dense</label>
      </node>
      <node id="18">
        <label>rj_vision_filter/robot/world_robot.hpp</label>
        <link refid="world__robot_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/pnayak/robocup-software/soccer/testing/rj_vision_filter/camera_test.cpp</label>
        <link refid="camera__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rj_msgs/msg/detection_robot.hpp</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="10">
        <label>rj_vision_filter/ball/camera_ball.hpp</label>
        <link refid="camera__ball_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
      <node id="26">
        <label>rj_vision_filter/camera/camera_frame.hpp</label>
        <link refid="camera__frame_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>rj_common/utils.hpp</label>
      </node>
      <node id="4">
        <label>rj_vision_filter/camera/camera.hpp</label>
        <link refid="camera_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>utility</label>
      </node>
      <node id="20">
        <label>rj_vision_filter/robot/kalman_robot.hpp</label>
        <link refid="kalman__robot_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>rj_vision_filter/ball/world_ball.hpp</label>
        <link refid="world__ball_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>rj_msgs/msg/detection_ball.hpp</label>
      </node>
      <node id="8">
        <label>rj_vision_filter/ball/kalman_ball.hpp</label>
        <link refid="kalman__ball_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rj_vision_filter/filter/kalman_filter.hpp</label>
        <link refid="kalman__filter_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>rj_msgs/msg/detection_frame.hpp</label>
      </node>
      <node id="12">
        <label>rj_common/time.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevision__filter">vision_filter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_constants/constants.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rj_vision_filter/camera/camera.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vision_filter<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal">TEST(Camera,<sp/>invalid_camera)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/>c<sp/>=<sp/>Camera();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(c.get_is_valid());</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">TEST(Camera,<sp/>valid_camera)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/>c<sp/>=<sp/>Camera(1);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanBall&gt;<sp/>kb<sp/>=<sp/>c.get_kalman_balls();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>kry<sp/>=<sp/>c.get_kalman_robots_yellow();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>krb<sp/>=<sp/>c.get_kalman_robots_blue();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(c.get_is_valid());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(kry.size(),<sp/>0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(krb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kry.at(0).size(),<sp/>0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(krb.at(0).size(),<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">TEST(Camera,<sp/>update_no_frame_empty)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/>c<sp/>=<sp/>Camera(1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>c.update_without_frame(RJ::now());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanBall&gt;<sp/>kb<sp/>=<sp/>c.get_kalman_balls();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>kry<sp/>=<sp/>c.get_kalman_robots_yellow();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>krb<sp/>=<sp/>c.get_kalman_robots_blue();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(c.get_is_valid());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(kry.size(),<sp/>0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(krb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kry.at(0).size(),<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(krb.at(0).size(),<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">TEST(Camera,<sp/>update_with_frame_empty)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/>c<sp/>=<sp/>Camera(1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>t<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CameraBall&gt;<sp/>b;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;CameraRobot&gt;&gt;<sp/>yr(kNumShells);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;CameraRobot&gt;&gt;<sp/>br(kNumShells);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>wry(kNumShells,<sp/>WorldRobot());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>wrb(kNumShells,<sp/>WorldRobot());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>c.update_with_frame(t,<sp/>b,<sp/>yr,<sp/>br,<sp/>wb,<sp/>wry,<sp/>wrb);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanBall&gt;<sp/>kb<sp/>=<sp/>c.get_kalman_balls();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>kry<sp/>=<sp/>c.get_kalman_robots_yellow();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>krb<sp/>=<sp/>c.get_kalman_robots_blue();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(c.get_is_valid());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(kry.size(),<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(krb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kry.at(0).size(),<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(krb.at(0).size(),<sp/>0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">TEST(Camera,<sp/>update_with_single_frame)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/>c<sp/>=<sp/>Camera(1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>RJ::Time<sp/>t<sp/>=<sp/>RJ::now();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CameraBall&gt;<sp/>b;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;CameraRobot&gt;&gt;<sp/>yr(kNumShells);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;CameraRobot&gt;&gt;<sp/>br(kNumShells);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>WorldBall<sp/>wb;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>wry(kNumShells,<sp/>WorldRobot());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;WorldRobot&gt;<sp/>wrb(kNumShells,<sp/>WorldRobot());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>b.emplace_back(RJ::now(),<sp/>rj_geometry::Point(0,<sp/>0));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>b.emplace_back(RJ::now(),<sp/>rj_geometry::Point(0.5,<sp/>0.5));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>yr.at(0).emplace_back(RJ::now(),<sp/>rj_geometry::Pose(rj_geometry::Point(1,<sp/>1),<sp/>0),<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>yr.at(0).emplace_back(RJ::now(),<sp/>rj_geometry::Pose(rj_geometry::Point(1.5,<sp/>1.5),<sp/>0.5),<sp/>0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>br.at(0).emplace_back(RJ::now(),<sp/>rj_geometry::Pose(rj_geometry::Point(1.5,<sp/>1.5),<sp/>0.5),<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>c.update_with_frame(t,<sp/>b,<sp/>yr,<sp/>br,<sp/>wb,<sp/>wry,<sp/>wrb);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;KalmanBall&gt;<sp/>kb<sp/>=<sp/>c.get_kalman_balls();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>kry<sp/>=<sp/>c.get_kalman_robots_yellow();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::list&lt;KalmanRobot&gt;&gt;<sp/>krb<sp/>=<sp/>c.get_kalman_robots_blue();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(c.get_is_valid());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kb.size(),<sp/>1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(kry.size(),<sp/>0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_GT(krb.size(),<sp/>0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(kry.at(0).size(),<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(krb.at(0).size(),<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(kb.front().get_pos().x(),<sp/>0.25,<sp/>0.01);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(kb.front().get_pos().y(),<sp/>0.25,<sp/>0.01);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(kry.at(0).front().get_pos().y(),<sp/>1.25,<sp/>0.01);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(kry.at(0).front().get_pos().y(),<sp/>1.25,<sp/>0.01);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NEAR(kry.at(0).front().get_theta(),<sp/>0.25,<sp/>0.01);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vision_filter</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/pnayak/robocup-software/soccer/testing/rj_vision_filter/camera_test.cpp"/>
  </compounddef>
</doxygen>
